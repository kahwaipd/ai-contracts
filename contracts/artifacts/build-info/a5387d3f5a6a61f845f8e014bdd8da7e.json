{
	"id": "a5387d3f5a6a61f845f8e014bdd8da7e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/3_Virtual_Factory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract VirtualFactory is AccessControl {\n    // Define a struct to hold the virtual and staking addresses\n    struct VirtualInfo {\n        address virtualAddress;\n        address stakingAddress;\n    }\n\n    // Declare a mapping with uint256 key to associate each user's Ethereum address with their virtual info\n    mapping(uint256 => VirtualInfo) public virtualInfos;\n\n    // Define the role that can modify the contract parameters\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n\n    // Address to store the token contract address\n    address public tokenAddress;\n\n    // Initial stake amount\n    uint256 public initialStakeAmount;\n\n    // Address of the DAO\n    address public daoAddress;\n\n    // Constructor to initialize the contract with the default admin role and tokenAddress\n    constructor(address defaultAdmin, address _tokenAddress, uint256 _initialStakeAmount, address _daoAddress) {\n        _grantRole(ADMIN_ROLE, defaultAdmin);\n        tokenAddress = _tokenAddress;\n        initialStakeAmount = _initialStakeAmount;\n        daoAddress = _daoAddress;\n    }\n\n    // Function to set the virtual information for a user\n    function setVirtualInfo(uint256 tokenId, address virtualAddress, address stakingAddress) public {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can modify virtual information\");\n        VirtualInfo memory newVirtualInfo = VirtualInfo({\n            virtualAddress: virtualAddress,\n            stakingAddress: stakingAddress\n        });\n\n        virtualInfos[tokenId] = newVirtualInfo;\n    }\n\n    // Function to get the virtual information for a user\n    function getVirtualInfo(uint256 tokenId) public view returns (address, address) {\n        VirtualInfo memory info = virtualInfos[tokenId];\n        return (info.virtualAddress, info.stakingAddress);\n    }\n\n    // Function to update the token address (only accessible by admins)\n    function setTokenAddress(address newTokenAddress) public {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can update tokenAddress\");\n        tokenAddress = newTokenAddress;\n    }\n\n    // Function to update the initial stake amount (only accessible by admins)\n    function setInitialStake(uint256 newInitialStakeAmount) public {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can update initial stake amount\");\n        initialStakeAmount = newInitialStakeAmount;\n    }\n\n    // Function to update the DAO address (only accessible by admins)\n    function setDaoAddress(address newDaoAddress) public {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can update DAO address\");\n        daoAddress = newDaoAddress;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/3_Virtual_Factory.sol": {
				"VirtualFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "defaultAdmin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_initialStakeAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_daoAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "daoAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getVirtualInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDaoAddress",
									"type": "address"
								}
							],
							"name": "setDaoAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newInitialStakeAmount",
									"type": "uint256"
								}
							],
							"name": "setInitialStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newTokenAddress",
									"type": "address"
								}
							],
							"name": "setTokenAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "virtualAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stakingAddress",
									"type": "address"
								}
							],
							"name": "setVirtualInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "virtualInfos",
							"outputs": [
								{
									"internalType": "address",
									"name": "virtualAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stakingAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_Virtual_Factory.sol\":117:2778  contract VirtualFactory is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_Virtual_Factory.sol\":923:1205  constructor(address defaultAdmin, address _tokenAddress, uint256 _initialStakeAmount, address _daoAddress) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_Virtual_Factory.sol\":1040:1076  _grantRole(ADMIN_ROLE, defaultAdmin) */\n  tag_6\n    /* \"contracts/3_Virtual_Factory.sol\":591:614  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"contracts/3_Virtual_Factory.sol\":1063:1075  defaultAdmin */\n  dup6\n    /* \"contracts/3_Virtual_Factory.sol\":1040:1050  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/3_Virtual_Factory.sol\":1040:1076  _grantRole(ADMIN_ROLE, defaultAdmin) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/3_Virtual_Factory.sol\":1101:1114  _tokenAddress */\n  dup3\n    /* \"contracts/3_Virtual_Factory.sol\":1086:1098  tokenAddress */\n  0x02\n  0x00\n    /* \"contracts/3_Virtual_Factory.sol\":1086:1114  tokenAddress = _tokenAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Virtual_Factory.sol\":1145:1164  _initialStakeAmount */\n  dup2\n    /* \"contracts/3_Virtual_Factory.sol\":1124:1142  initialStakeAmount */\n  0x03\n    /* \"contracts/3_Virtual_Factory.sol\":1124:1164  initialStakeAmount = _initialStakeAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Virtual_Factory.sol\":1187:1198  _daoAddress */\n  dup1\n    /* \"contracts/3_Virtual_Factory.sol\":1174:1184  daoAddress */\n  0x04\n  0x00\n    /* \"contracts/3_Virtual_Factory.sol\":1174:1198  daoAddress = _daoAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/3_Virtual_Factory.sol\":923:1205  constructor(address defaultAdmin, address _tokenAddress, uint256 _initialStakeAmount, address _daoAddress) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/3_Virtual_Factory.sol\":117:2778  contract VirtualFactory is AccessControl {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_34\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_36\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_37:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_39\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_25:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_26:\n    /* \"#utility.yul\":1001:1025   */\n  tag_42\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_43:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_27:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_45\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_26\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  dup1\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  dup1\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_48\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1343:1463   */\ntag_47:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_49\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_50\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_51\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_27\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_52\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_24\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"contracts/3_Virtual_Factory.sol\":117:2778  contract VirtualFactory is AccessControl {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_Virtual_Factory.sol\":117:2778  contract VirtualFactory is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3a30d283\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x91d14854\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9a3cac6a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x3a30d283\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5433e2f5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x691de489\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x248a9ca3\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x26a4e8d2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x10bc2d44\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2131c68c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x22d0d555\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Virtual_Factory.sol\":2297:2516  function setInitialStake(uint256 newInitialStakeAmount) public {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/3_Virtual_Factory.sol\":800:825  address public daoAddress */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Virtual_Factory.sol\":1269:1674  function setVirtualInfo(uint256 tokenId, address virtualAddress, address stakingAddress) public {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Virtual_Factory.sol\":2019:2212  function setTokenAddress(address newTokenAddress) public {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/3_Virtual_Factory.sol\":1738:1941  function getVirtualInfo(uint256 tokenId) public view returns (address, address) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Virtual_Factory.sol\":734:767  uint256 public initialStakeAmount */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Virtual_Factory.sol\":433:484  mapping(uint256 => VirtualInfo) public virtualInfos */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Virtual_Factory.sol\":554:614  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_15:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Virtual_Factory.sol\":2592:2776  function setDaoAddress(address newDaoAddress) public {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/3_Virtual_Factory.sol\":672:699  address public tokenAddress */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":2297:2516  function setInitialStake(uint256 newInitialStakeAmount) public {... */\n    tag_32:\n        /* \"contracts/3_Virtual_Factory.sol\":2378:2409  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_95\n        /* \"contracts/3_Virtual_Factory.sol\":591:614  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/3_Virtual_Factory.sol\":2398:2408  msg.sender */\n      caller\n        /* \"contracts/3_Virtual_Factory.sol\":2378:2385  hasRole */\n      tag_76\n        /* \"contracts/3_Virtual_Factory.sol\":2378:2409  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/3_Virtual_Factory.sol\":2370:2457  require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can update initial stake amount\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/3_Virtual_Factory.sol\":2488:2509  newInitialStakeAmount */\n      dup1\n        /* \"contracts/3_Virtual_Factory.sol\":2467:2485  initialStakeAmount */\n      0x03\n        /* \"contracts/3_Virtual_Factory.sol\":2467:2509  initialStakeAmount = newInitialStakeAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":2297:2516  function setInitialStake(uint256 newInitialStakeAmount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":800:825  address public daoAddress */\n    tag_34:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":1269:1674  function setVirtualInfo(uint256 tokenId, address virtualAddress, address stakingAddress) public {... */\n    tag_40:\n        /* \"contracts/3_Virtual_Factory.sol\":1383:1414  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_100\n        /* \"contracts/3_Virtual_Factory.sol\":591:614  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/3_Virtual_Factory.sol\":1403:1413  msg.sender */\n      caller\n        /* \"contracts/3_Virtual_Factory.sol\":1383:1390  hasRole */\n      tag_76\n        /* \"contracts/3_Virtual_Factory.sol\":1383:1414  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/3_Virtual_Factory.sol\":1375:1461  require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can modify virtual information\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/3_Virtual_Factory.sol\":1471:1504  VirtualInfo memory newVirtualInfo */\n      0x00\n        /* \"contracts/3_Virtual_Factory.sol\":1507:1618  VirtualInfo({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/3_Virtual_Factory.sol\":1549:1563  virtualAddress */\n      dup5\n        /* \"contracts/3_Virtual_Factory.sol\":1507:1618  VirtualInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/3_Virtual_Factory.sol\":1593:1607  stakingAddress */\n      dup4\n        /* \"contracts/3_Virtual_Factory.sol\":1507:1618  VirtualInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":1471:1618  VirtualInfo memory newVirtualInfo = VirtualInfo({... */\n      swap1\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":1653:1667  newVirtualInfo */\n      dup1\n        /* \"contracts/3_Virtual_Factory.sol\":1629:1641  virtualInfos */\n      0x01\n        /* \"contracts/3_Virtual_Factory.sol\":1629:1650  virtualInfos[tokenId] */\n      0x00\n        /* \"contracts/3_Virtual_Factory.sol\":1642:1649  tokenId */\n      dup7\n        /* \"contracts/3_Virtual_Factory.sol\":1629:1650  virtualInfos[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/3_Virtual_Factory.sol\":1629:1667  virtualInfos[tokenId] = newVirtualInfo */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":1365:1674  {... */\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":1269:1674  function setVirtualInfo(uint256 tokenId, address virtualAddress, address stakingAddress) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":2019:2212  function setTokenAddress(address newTokenAddress) public {... */\n    tag_50:\n        /* \"contracts/3_Virtual_Factory.sol\":2094:2125  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_106\n        /* \"contracts/3_Virtual_Factory.sol\":591:614  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/3_Virtual_Factory.sol\":2114:2124  msg.sender */\n      caller\n        /* \"contracts/3_Virtual_Factory.sol\":2094:2101  hasRole */\n      tag_76\n        /* \"contracts/3_Virtual_Factory.sol\":2094:2125  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/3_Virtual_Factory.sol\":2086:2165  require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can update tokenAddress\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/3_Virtual_Factory.sol\":2190:2205  newTokenAddress */\n      dup1\n        /* \"contracts/3_Virtual_Factory.sol\":2175:2187  tokenAddress */\n      0x02\n      0x00\n        /* \"contracts/3_Virtual_Factory.sol\":2175:2205  tokenAddress = newTokenAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":2019:2212  function setTokenAddress(address newTokenAddress) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_115:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_121:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":1738:1941  function getVirtualInfo(uint256 tokenId) public view returns (address, address) {... */\n    tag_60:\n        /* \"contracts/3_Virtual_Factory.sol\":1800:1807  address */\n      0x00\n        /* \"contracts/3_Virtual_Factory.sol\":1809:1816  address */\n      dup1\n        /* \"contracts/3_Virtual_Factory.sol\":1828:1851  VirtualInfo memory info */\n      0x00\n        /* \"contracts/3_Virtual_Factory.sol\":1854:1866  virtualInfos */\n      0x01\n        /* \"contracts/3_Virtual_Factory.sol\":1854:1875  virtualInfos[tokenId] */\n      0x00\n        /* \"contracts/3_Virtual_Factory.sol\":1867:1874  tokenId */\n      dup6\n        /* \"contracts/3_Virtual_Factory.sol\":1854:1875  virtualInfos[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/3_Virtual_Factory.sol\":1828:1875  VirtualInfo memory info = virtualInfos[tokenId] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":1893:1897  info */\n      dup1\n        /* \"contracts/3_Virtual_Factory.sol\":1893:1912  info.virtualAddress */\n      0x00\n      add\n      mload\n        /* \"contracts/3_Virtual_Factory.sol\":1914:1918  info */\n      dup2\n        /* \"contracts/3_Virtual_Factory.sol\":1914:1933  info.stakingAddress */\n      0x20\n      add\n      mload\n        /* \"contracts/3_Virtual_Factory.sol\":1885:1934  return (info.virtualAddress, info.stakingAddress) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":1738:1941  function getVirtualInfo(uint256 tokenId) public view returns (address, address) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":734:767  uint256 public initialStakeAmount */\n    tag_64:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":433:484  mapping(uint256 => VirtualInfo) public virtualInfos */\n    tag_69:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":554:614  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_72:\n        /* \"contracts/3_Virtual_Factory.sol\":591:614  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/3_Virtual_Factory.sol\":554:614  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":2592:2776  function setDaoAddress(address newDaoAddress) public {... */\n    tag_80:\n        /* \"contracts/3_Virtual_Factory.sol\":2663:2694  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_126\n        /* \"contracts/3_Virtual_Factory.sol\":591:614  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/3_Virtual_Factory.sol\":2683:2693  msg.sender */\n      caller\n        /* \"contracts/3_Virtual_Factory.sol\":2663:2670  hasRole */\n      tag_76\n        /* \"contracts/3_Virtual_Factory.sol\":2663:2694  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/3_Virtual_Factory.sol\":2655:2733  require(hasRole(ADMIN_ROLE, msg.sender), \"Only admins can update DAO address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/3_Virtual_Factory.sol\":2756:2769  newDaoAddress */\n      dup1\n        /* \"contracts/3_Virtual_Factory.sol\":2743:2753  daoAddress */\n      0x04\n      0x00\n        /* \"contracts/3_Virtual_Factory.sol\":2743:2769  daoAddress = newDaoAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/3_Virtual_Factory.sol\":2592:2776  function setDaoAddress(address newDaoAddress) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/3_Virtual_Factory.sol\":672:699  address public tokenAddress */\n    tag_82:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_122\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_134:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_76\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_140)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_140:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_76\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_146)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_146:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_76\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_157:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_159:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_160:\n        /* \"#utility.yul\":561:584   */\n      tag_192\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_159\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_193:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_161:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_195\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_160\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_198\n      tag_157\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":833:952   */\n    tag_197:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_199\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_161\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_162:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_163:\n        /* \"#utility.yul\":1268:1289   */\n      tag_202\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_162\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_204\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_163\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_164:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_165:\n        /* \"#utility.yul\":1674:1698   */\n      tag_207\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_164\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_208:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_166:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_210\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_165\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_31:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_213\n      tag_157\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1950:2069   */\n    tag_212:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_214\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_166\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2335   */\n    tag_167:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2286:2328   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2275:2329   */\n      and\n        /* \"#utility.yul\":2264:2329   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2437   */\n    tag_168:\n        /* \"#utility.yul\":2378:2385   */\n      0x00\n        /* \"#utility.yul\":2407:2431   */\n      tag_217\n        /* \"#utility.yul\":2425:2430   */\n      dup3\n        /* \"#utility.yul\":2407:2431   */\n      tag_167\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2396:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_169:\n        /* \"#utility.yul\":2530:2554   */\n      tag_219\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_168\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_36:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_221\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_169\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_170:\n        /* \"#utility.yul\":2868:2892   */\n      tag_223\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_168\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_224:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_171:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_226\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_170\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3687   */\n    tag_39:\n        /* \"#utility.yul\":3145:3151   */\n      0x00\n        /* \"#utility.yul\":3153:3159   */\n      dup1\n        /* \"#utility.yul\":3161:3167   */\n      0x00\n        /* \"#utility.yul\":3210:3212   */\n      0x60\n        /* \"#utility.yul\":3198:3207   */\n      dup5\n        /* \"#utility.yul\":3189:3196   */\n      dup7\n        /* \"#utility.yul\":3185:3208   */\n      sub\n        /* \"#utility.yul\":3181:3213   */\n      slt\n        /* \"#utility.yul\":3178:3297   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3216:3295   */\n      tag_229\n      tag_157\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3178:3297   */\n    tag_228:\n        /* \"#utility.yul\":3336:3337   */\n      0x00\n        /* \"#utility.yul\":3361:3414   */\n      tag_230\n        /* \"#utility.yul\":3406:3413   */\n      dup7\n        /* \"#utility.yul\":3397:3403   */\n      dup3\n        /* \"#utility.yul\":3386:3395   */\n      dup8\n        /* \"#utility.yul\":3382:3404   */\n      add\n        /* \"#utility.yul\":3361:3414   */\n      tag_166\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3351:3414   */\n      swap4\n      pop\n        /* \"#utility.yul\":3307:3424   */\n      pop\n        /* \"#utility.yul\":3463:3465   */\n      0x20\n        /* \"#utility.yul\":3489:3542   */\n      tag_231\n        /* \"#utility.yul\":3534:3541   */\n      dup7\n        /* \"#utility.yul\":3525:3531   */\n      dup3\n        /* \"#utility.yul\":3514:3523   */\n      dup8\n        /* \"#utility.yul\":3510:3532   */\n      add\n        /* \"#utility.yul\":3489:3542   */\n      tag_171\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3479:3542   */\n      swap3\n      pop\n        /* \"#utility.yul\":3434:3552   */\n      pop\n        /* \"#utility.yul\":3591:3593   */\n      0x40\n        /* \"#utility.yul\":3617:3670   */\n      tag_232\n        /* \"#utility.yul\":3662:3669   */\n      dup7\n        /* \"#utility.yul\":3653:3659   */\n      dup3\n        /* \"#utility.yul\":3642:3651   */\n      dup8\n        /* \"#utility.yul\":3638:3660   */\n      add\n        /* \"#utility.yul\":3617:3670   */\n      tag_171\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3607:3670   */\n      swap2\n      pop\n        /* \"#utility.yul\":3562:3680   */\n      pop\n        /* \"#utility.yul\":3068:3687   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3693:3770   */\n    tag_172:\n        /* \"#utility.yul\":3730:3737   */\n      0x00\n        /* \"#utility.yul\":3759:3764   */\n      dup2\n        /* \"#utility.yul\":3748:3764   */\n      swap1\n      pop\n        /* \"#utility.yul\":3693:3770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3776:3898   */\n    tag_173:\n        /* \"#utility.yul\":3849:3873   */\n      tag_235\n        /* \"#utility.yul\":3867:3872   */\n      dup2\n        /* \"#utility.yul\":3849:3873   */\n      tag_172\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":3842:3847   */\n      dup2\n        /* \"#utility.yul\":3839:3874   */\n      eq\n        /* \"#utility.yul\":3829:3892   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":3888:3889   */\n      0x00\n        /* \"#utility.yul\":3885:3886   */\n      dup1\n        /* \"#utility.yul\":3878:3890   */\n      revert\n        /* \"#utility.yul\":3829:3892   */\n    tag_236:\n        /* \"#utility.yul\":3776:3898   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3904:4043   */\n    tag_174:\n        /* \"#utility.yul\":3950:3955   */\n      0x00\n        /* \"#utility.yul\":3988:3994   */\n      dup2\n        /* \"#utility.yul\":3975:3995   */\n      calldataload\n        /* \"#utility.yul\":3966:3995   */\n      swap1\n      pop\n        /* \"#utility.yul\":4004:4037   */\n      tag_238\n        /* \"#utility.yul\":4031:4036   */\n      dup2\n        /* \"#utility.yul\":4004:4037   */\n      tag_173\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3904:4043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4049:4378   */\n    tag_43:\n        /* \"#utility.yul\":4108:4114   */\n      0x00\n        /* \"#utility.yul\":4157:4159   */\n      0x20\n        /* \"#utility.yul\":4145:4154   */\n      dup3\n        /* \"#utility.yul\":4136:4143   */\n      dup5\n        /* \"#utility.yul\":4132:4155   */\n      sub\n        /* \"#utility.yul\":4128:4160   */\n      slt\n        /* \"#utility.yul\":4125:4244   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":4163:4242   */\n      tag_241\n      tag_157\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4125:4244   */\n    tag_240:\n        /* \"#utility.yul\":4283:4284   */\n      0x00\n        /* \"#utility.yul\":4308:4361   */\n      tag_242\n        /* \"#utility.yul\":4353:4360   */\n      dup5\n        /* \"#utility.yul\":4344:4350   */\n      dup3\n        /* \"#utility.yul\":4333:4342   */\n      dup6\n        /* \"#utility.yul\":4329:4351   */\n      add\n        /* \"#utility.yul\":4308:4361   */\n      tag_174\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4298:4361   */\n      swap2\n      pop\n        /* \"#utility.yul\":4254:4371   */\n      pop\n        /* \"#utility.yul\":4049:4378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4384:4502   */\n    tag_175:\n        /* \"#utility.yul\":4471:4495   */\n      tag_244\n        /* \"#utility.yul\":4489:4494   */\n      dup2\n        /* \"#utility.yul\":4471:4495   */\n      tag_172\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4466:4469   */\n      dup3\n        /* \"#utility.yul\":4459:4496   */\n      mstore\n        /* \"#utility.yul\":4384:4502   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4508:4730   */\n    tag_46:\n        /* \"#utility.yul\":4601:4605   */\n      0x00\n        /* \"#utility.yul\":4639:4641   */\n      0x20\n        /* \"#utility.yul\":4628:4637   */\n      dup3\n        /* \"#utility.yul\":4624:4642   */\n      add\n        /* \"#utility.yul\":4616:4642   */\n      swap1\n      pop\n        /* \"#utility.yul\":4652:4723   */\n      tag_246\n        /* \"#utility.yul\":4720:4721   */\n      0x00\n        /* \"#utility.yul\":4709:4718   */\n      dup4\n        /* \"#utility.yul\":4705:4722   */\n      add\n        /* \"#utility.yul\":4696:4702   */\n      dup5\n        /* \"#utility.yul\":4652:4723   */\n      tag_175\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4508:4730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4736:5065   */\n    tag_49:\n        /* \"#utility.yul\":4795:4801   */\n      0x00\n        /* \"#utility.yul\":4844:4846   */\n      0x20\n        /* \"#utility.yul\":4832:4841   */\n      dup3\n        /* \"#utility.yul\":4823:4830   */\n      dup5\n        /* \"#utility.yul\":4819:4842   */\n      sub\n        /* \"#utility.yul\":4815:4847   */\n      slt\n        /* \"#utility.yul\":4812:4931   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":4850:4929   */\n      tag_249\n      tag_157\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4812:4931   */\n    tag_248:\n        /* \"#utility.yul\":4970:4971   */\n      0x00\n        /* \"#utility.yul\":4995:5048   */\n      tag_250\n        /* \"#utility.yul\":5040:5047   */\n      dup5\n        /* \"#utility.yul\":5031:5037   */\n      dup3\n        /* \"#utility.yul\":5020:5029   */\n      dup6\n        /* \"#utility.yul\":5016:5038   */\n      add\n        /* \"#utility.yul\":4995:5048   */\n      tag_171\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4985:5048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4941:5058   */\n      pop\n        /* \"#utility.yul\":4736:5065   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5545   */\n    tag_53:\n        /* \"#utility.yul\":5139:5145   */\n      0x00\n        /* \"#utility.yul\":5147:5153   */\n      dup1\n        /* \"#utility.yul\":5196:5198   */\n      0x40\n        /* \"#utility.yul\":5184:5193   */\n      dup4\n        /* \"#utility.yul\":5175:5182   */\n      dup6\n        /* \"#utility.yul\":5171:5194   */\n      sub\n        /* \"#utility.yul\":5167:5199   */\n      slt\n        /* \"#utility.yul\":5164:5283   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":5202:5281   */\n      tag_253\n      tag_157\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5164:5283   */\n    tag_252:\n        /* \"#utility.yul\":5322:5323   */\n      0x00\n        /* \"#utility.yul\":5347:5400   */\n      tag_254\n        /* \"#utility.yul\":5392:5399   */\n      dup6\n        /* \"#utility.yul\":5383:5389   */\n      dup3\n        /* \"#utility.yul\":5372:5381   */\n      dup7\n        /* \"#utility.yul\":5368:5390   */\n      add\n        /* \"#utility.yul\":5347:5400   */\n      tag_174\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5337:5400   */\n      swap3\n      pop\n        /* \"#utility.yul\":5293:5410   */\n      pop\n        /* \"#utility.yul\":5449:5451   */\n      0x20\n        /* \"#utility.yul\":5475:5528   */\n      tag_255\n        /* \"#utility.yul\":5520:5527   */\n      dup6\n        /* \"#utility.yul\":5511:5517   */\n      dup3\n        /* \"#utility.yul\":5500:5509   */\n      dup7\n        /* \"#utility.yul\":5496:5518   */\n      add\n        /* \"#utility.yul\":5475:5528   */\n      tag_171\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5465:5528   */\n      swap2\n      pop\n        /* \"#utility.yul\":5420:5538   */\n      pop\n        /* \"#utility.yul\":5071:5545   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5551:5883   */\n    tag_62:\n        /* \"#utility.yul\":5672:5676   */\n      0x00\n        /* \"#utility.yul\":5710:5712   */\n      0x40\n        /* \"#utility.yul\":5699:5708   */\n      dup3\n        /* \"#utility.yul\":5695:5713   */\n      add\n        /* \"#utility.yul\":5687:5713   */\n      swap1\n      pop\n        /* \"#utility.yul\":5723:5794   */\n      tag_257\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5780:5789   */\n      dup4\n        /* \"#utility.yul\":5776:5793   */\n      add\n        /* \"#utility.yul\":5767:5773   */\n      dup6\n        /* \"#utility.yul\":5723:5794   */\n      tag_169\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5804:5876   */\n      tag_258\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5861:5870   */\n      dup4\n        /* \"#utility.yul\":5857:5875   */\n      add\n        /* \"#utility.yul\":5848:5854   */\n      dup5\n        /* \"#utility.yul\":5804:5876   */\n      tag_169\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5551:5883   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5889:6007   */\n    tag_176:\n        /* \"#utility.yul\":5976:6000   */\n      tag_260\n        /* \"#utility.yul\":5994:5999   */\n      dup2\n        /* \"#utility.yul\":5976:6000   */\n      tag_164\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5971:5974   */\n      dup3\n        /* \"#utility.yul\":5964:6001   */\n      mstore\n        /* \"#utility.yul\":5889:6007   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6013:6235   */\n    tag_66:\n        /* \"#utility.yul\":6106:6110   */\n      0x00\n        /* \"#utility.yul\":6144:6146   */\n      0x20\n        /* \"#utility.yul\":6133:6142   */\n      dup3\n        /* \"#utility.yul\":6129:6147   */\n      add\n        /* \"#utility.yul\":6121:6147   */\n      swap1\n      pop\n        /* \"#utility.yul\":6157:6228   */\n      tag_262\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6214:6223   */\n      dup4\n        /* \"#utility.yul\":6210:6227   */\n      add\n        /* \"#utility.yul\":6201:6207   */\n      dup5\n        /* \"#utility.yul\":6157:6228   */\n      tag_176\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6013:6235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6241:6410   */\n    tag_177:\n        /* \"#utility.yul\":6325:6336   */\n      0x00\n        /* \"#utility.yul\":6359:6365   */\n      dup3\n        /* \"#utility.yul\":6354:6357   */\n      dup3\n        /* \"#utility.yul\":6347:6366   */\n      mstore\n        /* \"#utility.yul\":6399:6403   */\n      0x20\n        /* \"#utility.yul\":6394:6397   */\n      dup3\n        /* \"#utility.yul\":6390:6404   */\n      add\n        /* \"#utility.yul\":6375:6404   */\n      swap1\n      pop\n        /* \"#utility.yul\":6241:6410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6416:6646   */\n    tag_178:\n        /* \"#utility.yul\":6556:6590   */\n      0x4f6e6c792061646d696e732063616e2075706461746520696e697469616c2073\n        /* \"#utility.yul\":6552:6553   */\n      0x00\n        /* \"#utility.yul\":6544:6550   */\n      dup3\n        /* \"#utility.yul\":6540:6554   */\n      add\n        /* \"#utility.yul\":6533:6591   */\n      mstore\n        /* \"#utility.yul\":6625:6638   */\n      0x74616b6520616d6f756e74000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6620:6622   */\n      0x20\n        /* \"#utility.yul\":6612:6618   */\n      dup3\n        /* \"#utility.yul\":6608:6623   */\n      add\n        /* \"#utility.yul\":6601:6639   */\n      mstore\n        /* \"#utility.yul\":6416:6646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6652:7018   */\n    tag_179:\n        /* \"#utility.yul\":6794:6797   */\n      0x00\n        /* \"#utility.yul\":6815:6882   */\n      tag_266\n        /* \"#utility.yul\":6879:6881   */\n      0x2b\n        /* \"#utility.yul\":6874:6877   */\n      dup4\n        /* \"#utility.yul\":6815:6882   */\n      tag_177\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6808:6882   */\n      swap2\n      pop\n        /* \"#utility.yul\":6891:6984   */\n      tag_267\n        /* \"#utility.yul\":6980:6983   */\n      dup3\n        /* \"#utility.yul\":6891:6984   */\n      tag_178\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7009:7011   */\n      0x40\n        /* \"#utility.yul\":7004:7007   */\n      dup3\n        /* \"#utility.yul\":7000:7012   */\n      add\n        /* \"#utility.yul\":6993:7012   */\n      swap1\n      pop\n        /* \"#utility.yul\":6652:7018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7024:7443   */\n    tag_98:\n        /* \"#utility.yul\":7190:7194   */\n      0x00\n        /* \"#utility.yul\":7228:7230   */\n      0x20\n        /* \"#utility.yul\":7217:7226   */\n      dup3\n        /* \"#utility.yul\":7213:7231   */\n      add\n        /* \"#utility.yul\":7205:7231   */\n      swap1\n      pop\n        /* \"#utility.yul\":7277:7286   */\n      dup2\n        /* \"#utility.yul\":7271:7275   */\n      dup2\n        /* \"#utility.yul\":7267:7287   */\n      sub\n        /* \"#utility.yul\":7263:7264   */\n      0x00\n        /* \"#utility.yul\":7252:7261   */\n      dup4\n        /* \"#utility.yul\":7248:7265   */\n      add\n        /* \"#utility.yul\":7241:7288   */\n      mstore\n        /* \"#utility.yul\":7305:7436   */\n      tag_269\n        /* \"#utility.yul\":7431:7435   */\n      dup2\n        /* \"#utility.yul\":7305:7436   */\n      tag_179\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7297:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7024:7443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7449:7678   */\n    tag_180:\n        /* \"#utility.yul\":7589:7623   */\n      0x4f6e6c792061646d696e732063616e206d6f64696679207669727475616c2069\n        /* \"#utility.yul\":7585:7586   */\n      0x00\n        /* \"#utility.yul\":7577:7583   */\n      dup3\n        /* \"#utility.yul\":7573:7587   */\n      add\n        /* \"#utility.yul\":7566:7624   */\n      mstore\n        /* \"#utility.yul\":7658:7670   */\n      0x6e666f726d6174696f6e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7653:7655   */\n      0x20\n        /* \"#utility.yul\":7645:7651   */\n      dup3\n        /* \"#utility.yul\":7641:7656   */\n      add\n        /* \"#utility.yul\":7634:7671   */\n      mstore\n        /* \"#utility.yul\":7449:7678   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:8050   */\n    tag_181:\n        /* \"#utility.yul\":7826:7829   */\n      0x00\n        /* \"#utility.yul\":7847:7914   */\n      tag_272\n        /* \"#utility.yul\":7911:7913   */\n      0x2a\n        /* \"#utility.yul\":7906:7909   */\n      dup4\n        /* \"#utility.yul\":7847:7914   */\n      tag_177\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7840:7914   */\n      swap2\n      pop\n        /* \"#utility.yul\":7923:8016   */\n      tag_273\n        /* \"#utility.yul\":8012:8015   */\n      dup3\n        /* \"#utility.yul\":7923:8016   */\n      tag_180\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8041:8043   */\n      0x40\n        /* \"#utility.yul\":8036:8039   */\n      dup3\n        /* \"#utility.yul\":8032:8044   */\n      add\n        /* \"#utility.yul\":8025:8044   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:8050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8056:8475   */\n    tag_103:\n        /* \"#utility.yul\":8222:8226   */\n      0x00\n        /* \"#utility.yul\":8260:8262   */\n      0x20\n        /* \"#utility.yul\":8249:8258   */\n      dup3\n        /* \"#utility.yul\":8245:8263   */\n      add\n        /* \"#utility.yul\":8237:8263   */\n      swap1\n      pop\n        /* \"#utility.yul\":8309:8318   */\n      dup2\n        /* \"#utility.yul\":8303:8307   */\n      dup2\n        /* \"#utility.yul\":8299:8319   */\n      sub\n        /* \"#utility.yul\":8295:8296   */\n      0x00\n        /* \"#utility.yul\":8284:8293   */\n      dup4\n        /* \"#utility.yul\":8280:8297   */\n      add\n        /* \"#utility.yul\":8273:8320   */\n      mstore\n        /* \"#utility.yul\":8337:8468   */\n      tag_275\n        /* \"#utility.yul\":8463:8467   */\n      dup2\n        /* \"#utility.yul\":8337:8468   */\n      tag_181\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8329:8468   */\n      swap1\n      pop\n        /* \"#utility.yul\":8056:8475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8481:8703   */\n    tag_182:\n        /* \"#utility.yul\":8621:8655   */\n      0x4f6e6c792061646d696e732063616e2075706461746520746f6b656e41646472\n        /* \"#utility.yul\":8617:8618   */\n      0x00\n        /* \"#utility.yul\":8609:8615   */\n      dup3\n        /* \"#utility.yul\":8605:8619   */\n      add\n        /* \"#utility.yul\":8598:8656   */\n      mstore\n        /* \"#utility.yul\":8690:8695   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8685:8687   */\n      0x20\n        /* \"#utility.yul\":8677:8683   */\n      dup3\n        /* \"#utility.yul\":8673:8688   */\n      add\n        /* \"#utility.yul\":8666:8696   */\n      mstore\n        /* \"#utility.yul\":8481:8703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8709:9075   */\n    tag_183:\n        /* \"#utility.yul\":8851:8854   */\n      0x00\n        /* \"#utility.yul\":8872:8939   */\n      tag_278\n        /* \"#utility.yul\":8936:8938   */\n      0x23\n        /* \"#utility.yul\":8931:8934   */\n      dup4\n        /* \"#utility.yul\":8872:8939   */\n      tag_177\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8865:8939   */\n      swap2\n      pop\n        /* \"#utility.yul\":8948:9041   */\n      tag_279\n        /* \"#utility.yul\":9037:9040   */\n      dup3\n        /* \"#utility.yul\":8948:9041   */\n      tag_182\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9066:9068   */\n      0x40\n        /* \"#utility.yul\":9061:9064   */\n      dup3\n        /* \"#utility.yul\":9057:9069   */\n      add\n        /* \"#utility.yul\":9050:9069   */\n      swap1\n      pop\n        /* \"#utility.yul\":8709:9075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9081:9500   */\n    tag_109:\n        /* \"#utility.yul\":9247:9251   */\n      0x00\n        /* \"#utility.yul\":9285:9287   */\n      0x20\n        /* \"#utility.yul\":9274:9283   */\n      dup3\n        /* \"#utility.yul\":9270:9288   */\n      add\n        /* \"#utility.yul\":9262:9288   */\n      swap1\n      pop\n        /* \"#utility.yul\":9334:9343   */\n      dup2\n        /* \"#utility.yul\":9328:9332   */\n      dup2\n        /* \"#utility.yul\":9324:9344   */\n      sub\n        /* \"#utility.yul\":9320:9321   */\n      0x00\n        /* \"#utility.yul\":9309:9318   */\n      dup4\n        /* \"#utility.yul\":9305:9322   */\n      add\n        /* \"#utility.yul\":9298:9345   */\n      mstore\n        /* \"#utility.yul\":9362:9493   */\n      tag_281\n        /* \"#utility.yul\":9488:9492   */\n      dup2\n        /* \"#utility.yul\":9362:9493   */\n      tag_183\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":9354:9493   */\n      swap1\n      pop\n        /* \"#utility.yul\":9081:9500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9506:9727   */\n    tag_184:\n        /* \"#utility.yul\":9646:9680   */\n      0x4f6e6c792061646d696e732063616e207570646174652044414f206164647265\n        /* \"#utility.yul\":9642:9643   */\n      0x00\n        /* \"#utility.yul\":9634:9640   */\n      dup3\n        /* \"#utility.yul\":9630:9644   */\n      add\n        /* \"#utility.yul\":9623:9681   */\n      mstore\n        /* \"#utility.yul\":9715:9719   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9710:9712   */\n      0x20\n        /* \"#utility.yul\":9702:9708   */\n      dup3\n        /* \"#utility.yul\":9698:9713   */\n      add\n        /* \"#utility.yul\":9691:9720   */\n      mstore\n        /* \"#utility.yul\":9506:9727   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9733:10099   */\n    tag_185:\n        /* \"#utility.yul\":9875:9878   */\n      0x00\n        /* \"#utility.yul\":9896:9963   */\n      tag_284\n        /* \"#utility.yul\":9960:9962   */\n      0x22\n        /* \"#utility.yul\":9955:9958   */\n      dup4\n        /* \"#utility.yul\":9896:9963   */\n      tag_177\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":9889:9963   */\n      swap2\n      pop\n        /* \"#utility.yul\":9972:10065   */\n      tag_285\n        /* \"#utility.yul\":10061:10064   */\n      dup3\n        /* \"#utility.yul\":9972:10065   */\n      tag_184\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10090:10092   */\n      0x40\n        /* \"#utility.yul\":10085:10088   */\n      dup3\n        /* \"#utility.yul\":10081:10093   */\n      add\n        /* \"#utility.yul\":10074:10093   */\n      swap1\n      pop\n        /* \"#utility.yul\":9733:10099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10105:10524   */\n    tag_129:\n        /* \"#utility.yul\":10271:10275   */\n      0x00\n        /* \"#utility.yul\":10309:10311   */\n      0x20\n        /* \"#utility.yul\":10298:10307   */\n      dup3\n        /* \"#utility.yul\":10294:10312   */\n      add\n        /* \"#utility.yul\":10286:10312   */\n      swap1\n      pop\n        /* \"#utility.yul\":10358:10367   */\n      dup2\n        /* \"#utility.yul\":10352:10356   */\n      dup2\n        /* \"#utility.yul\":10348:10368   */\n      sub\n        /* \"#utility.yul\":10344:10345   */\n      0x00\n        /* \"#utility.yul\":10333:10342   */\n      dup4\n        /* \"#utility.yul\":10329:10346   */\n      add\n        /* \"#utility.yul\":10322:10369   */\n      mstore\n        /* \"#utility.yul\":10386:10517   */\n      tag_287\n        /* \"#utility.yul\":10512:10516   */\n      dup2\n        /* \"#utility.yul\":10386:10517   */\n      tag_185\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":10378:10517   */\n      swap1\n      pop\n        /* \"#utility.yul\":10105:10524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10530:10862   */\n    tag_155:\n        /* \"#utility.yul\":10651:10655   */\n      0x00\n        /* \"#utility.yul\":10689:10691   */\n      0x40\n        /* \"#utility.yul\":10678:10687   */\n      dup3\n        /* \"#utility.yul\":10674:10692   */\n      add\n        /* \"#utility.yul\":10666:10692   */\n      swap1\n      pop\n        /* \"#utility.yul\":10702:10773   */\n      tag_289\n        /* \"#utility.yul\":10770:10771   */\n      0x00\n        /* \"#utility.yul\":10759:10768   */\n      dup4\n        /* \"#utility.yul\":10755:10772   */\n      add\n        /* \"#utility.yul\":10746:10752   */\n      dup6\n        /* \"#utility.yul\":10702:10773   */\n      tag_169\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10783:10855   */\n      tag_290\n        /* \"#utility.yul\":10851:10853   */\n      0x20\n        /* \"#utility.yul\":10840:10849   */\n      dup4\n        /* \"#utility.yul\":10836:10854   */\n      add\n        /* \"#utility.yul\":10827:10833   */\n      dup5\n        /* \"#utility.yul\":10783:10855   */\n      tag_175\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":10530:10862   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b7c9e702a205380ceff290ce6d172c82c46f41e831504cb903df7ac9f4ab473d64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 250,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": 600,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 501,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_address_fromMemory": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2028:6",
										"nodeType": "YulBlock",
										"src": "0:2028:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "759:80:6",
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nativeSrc": "769:22:6",
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nativeSrc": "778:13:6",
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nativeSrc": "800:33:6",
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nativeSrc": "800:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:6",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:6",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:6",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nativeSrc": "890:32:6",
													"nodeType": "YulBlock",
													"src": "890:32:6",
													"statements": [
														{
															"nativeSrc": "900:16:6",
															"nodeType": "YulAssignment",
															"src": "900:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:6",
																"nodeType": "YulIdentifier",
																"src": "911:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:6",
														"nodeType": "YulTypedName",
														"src": "872:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:6",
														"nodeType": "YulTypedName",
														"src": "882:7:6",
														"type": ""
													}
												],
												"src": "845:77:6"
											},
											{
												"body": {
													"nativeSrc": "971:79:6",
													"nodeType": "YulBlock",
													"src": "971:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:6",
																"nodeType": "YulBlock",
																"src": "1028:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:6"
																			},
																			"nativeSrc": "1030:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:6"
																		},
																		"nativeSrc": "1030:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:6"
																				},
																				"nativeSrc": "1001:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:6"
																		},
																		"nativeSrc": "991:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:6"
																},
																"nativeSrc": "984:43:6",
																"nodeType": "YulFunctionCall",
																"src": "984:43:6"
															},
															"nativeSrc": "981:63:6",
															"nodeType": "YulIf",
															"src": "981:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:6",
														"nodeType": "YulTypedName",
														"src": "964:5:6",
														"type": ""
													}
												],
												"src": "928:122:6"
											},
											{
												"body": {
													"nativeSrc": "1119:80:6",
													"nodeType": "YulBlock",
													"src": "1119:80:6",
													"statements": [
														{
															"nativeSrc": "1129:22:6",
															"nodeType": "YulAssignment",
															"src": "1129:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:6"
																},
																"nativeSrc": "1138:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:6"
																},
																"nativeSrc": "1160:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:6"
															},
															"nativeSrc": "1160:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:6",
														"nodeType": "YulTypedName",
														"src": "1097:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:6",
														"nodeType": "YulTypedName",
														"src": "1105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:6",
														"nodeType": "YulTypedName",
														"src": "1113:5:6",
														"type": ""
													}
												],
												"src": "1056:143:6"
											},
											{
												"body": {
													"nativeSrc": "1333:692:6",
													"nodeType": "YulBlock",
													"src": "1333:692:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:83:6",
																"nodeType": "YulBlock",
																"src": "1380:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1382:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:6"
																			},
																			"nativeSrc": "1382:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:6"
																		},
																		"nativeSrc": "1382:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1354:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1363:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1350:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:6"
																		},
																		"nativeSrc": "1350:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1375:3:6",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1346:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:6"
																},
																"nativeSrc": "1346:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1346:33:6"
															},
															"nativeSrc": "1343:120:6",
															"nodeType": "YulIf",
															"src": "1343:120:6"
														},
														{
															"nativeSrc": "1473:128:6",
															"nodeType": "YulBlock",
															"src": "1473:128:6",
															"statements": [
																{
																	"nativeSrc": "1488:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1502:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1492:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1517:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1517:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1563:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1574:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1559:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:6"
																				},
																				"nativeSrc": "1559:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1583:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1527:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:6"
																		},
																		"nativeSrc": "1527:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1517:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1611:129:6",
															"nodeType": "YulBlock",
															"src": "1611:129:6",
															"statements": [
																{
																	"nativeSrc": "1626:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1640:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1630:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1656:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1656:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1702:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1713:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1698:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:6"
																				},
																				"nativeSrc": "1698:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1666:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:6"
																		},
																		"nativeSrc": "1666:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1656:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1750:129:6",
															"nodeType": "YulBlock",
															"src": "1750:129:6",
															"statements": [
																{
																	"nativeSrc": "1765:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1779:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1769:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1795:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1795:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1841:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1852:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1837:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:6"
																				},
																				"nativeSrc": "1837:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1805:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:6"
																		},
																		"nativeSrc": "1805:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1795:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1889:129:6",
															"nodeType": "YulBlock",
															"src": "1889:129:6",
															"statements": [
																{
																	"nativeSrc": "1904:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1918:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1908:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1934:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1934:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1980:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1991:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1976:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:6"
																				},
																				"nativeSrc": "1976:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2000:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1944:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:6"
																		},
																		"nativeSrc": "1944:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1934:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_address_fromMemory",
												"nativeSrc": "1205:820:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1279:9:6",
														"nodeType": "YulTypedName",
														"src": "1279:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1290:7:6",
														"nodeType": "YulTypedName",
														"src": "1290:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1302:6:6",
														"nodeType": "YulTypedName",
														"src": "1302:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1310:6:6",
														"nodeType": "YulTypedName",
														"src": "1310:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1318:6:6",
														"nodeType": "YulTypedName",
														"src": "1318:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1326:6:6",
														"nodeType": "YulTypedName",
														"src": "1326:6:6",
														"type": ""
													}
												],
												"src": "1205:820:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50604051620015cc380380620015cc8339818101604052810190620000369190620002fc565b620000687fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177585620000fa60201b60201c565b508260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200036b565b5f6200010d8383620001f560201b60201c565b620001eb5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620001876200025860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620001ef565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200028e8262000263565b9050919050565b620002a08162000282565b8114620002ab575f80fd5b50565b5f81519050620002be8162000295565b92915050565b5f819050919050565b620002d881620002c4565b8114620002e3575f80fd5b50565b5f81519050620002f681620002cd565b92915050565b5f805f80608085870312156200031757620003166200025f565b5b5f6200032687828801620002ae565b94505060206200033987828801620002ae565b93505060406200034c87828801620002e6565b92505060606200035f87828801620002ae565b91505092959194509250565b61125380620003795f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c80633a30d283116100a057806391d148541161006f57806391d14854146102b55780639a3cac6a146102e55780639d76ea5814610301578063a217fddf1461031f578063d547741f1461033d57610109565b80633a30d283146102175780635433e2f514610248578063691de4891461026657806375b238fc1461029757610109565b8063248a9ca3116100dc578063248a9ca31461019357806326a4e8d2146101c35780632f2ff15d146101df57806336568abe146101fb57610109565b806301ffc9a71461010d57806310bc2d441461013d5780632131c68c1461015957806322d0d55514610177575b5f80fd5b61012760048036038101906101229190610ce2565b610359565b6040516101349190610d27565b60405180910390f35b61015760048036038101906101529190610d73565b6103d2565b005b610161610445565b60405161016e9190610ddd565b60405180910390f35b610191600480360381019061018c9190610e20565b61046a565b005b6101ad60048036038101906101a89190610ea3565b6105bc565b6040516101ba9190610edd565b60405180910390f35b6101dd60048036038101906101d89190610ef6565b6105d8565b005b6101f960048036038101906101f49190610f21565b610684565b005b61021560048036038101906102109190610f21565b6106a6565b005b610231600480360381019061022c9190610d73565b610721565b60405161023f929190610f5f565b60405180910390f35b6102506107fe565b60405161025d9190610f95565b60405180910390f35b610280600480360381019061027b9190610d73565b610804565b60405161028e929190610f5f565b60405180910390f35b61029f610862565b6040516102ac9190610edd565b60405180910390f35b6102cf60048036038101906102ca9190610f21565b610886565b6040516102dc9190610d27565b60405180910390f35b6102ff60048036038101906102fa9190610ef6565b6108e9565b005b610309610995565b6040516103169190610ddd565b60405180910390f35b6103276109ba565b6040516103349190610edd565b60405180910390f35b61035760048036038101906103529190610f21565b6109c0565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cb57506103ca826109e2565b5b9050919050565b6103fc7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b61043b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104329061102e565b60405180910390fd5b8060038190555050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104947fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b6104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca906110bc565b60405180910390fd5b5f60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681525090508060015f8681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b5f805f8381526020019081526020015f20600101549050919050565b6106027fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b610641576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106389061114a565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61068d826105bc565b61069681610a4b565b6106a08383610a5f565b50505050565b6106ae610b48565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610712576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61071c8282610b4f565b505050565b5f805f60015f8581526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050805f015181602001519250925050915091565b60035481565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6109137fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b610952576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610949906111d8565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f801b81565b6109c9826105bc565b6109d281610a4b565b6109dc8383610b4f565b50505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5c81610a57610b48565b610c38565b50565b5f610a6a8383610886565b610b3e5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610adb610b48565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b42565b5f90505b92915050565b5f33905090565b5f610b5a8383610886565b15610c2e575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bcb610b48565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c32565b5f90505b92915050565b610c428282610886565b610c855780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610c7c9291906111f6565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cc181610c8d565b8114610ccb575f80fd5b50565b5f81359050610cdc81610cb8565b92915050565b5f60208284031215610cf757610cf6610c89565b5b5f610d0484828501610cce565b91505092915050565b5f8115159050919050565b610d2181610d0d565b82525050565b5f602082019050610d3a5f830184610d18565b92915050565b5f819050919050565b610d5281610d40565b8114610d5c575f80fd5b50565b5f81359050610d6d81610d49565b92915050565b5f60208284031215610d8857610d87610c89565b5b5f610d9584828501610d5f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dc782610d9e565b9050919050565b610dd781610dbd565b82525050565b5f602082019050610df05f830184610dce565b92915050565b610dff81610dbd565b8114610e09575f80fd5b50565b5f81359050610e1a81610df6565b92915050565b5f805f60608486031215610e3757610e36610c89565b5b5f610e4486828701610d5f565b9350506020610e5586828701610e0c565b9250506040610e6686828701610e0c565b9150509250925092565b5f819050919050565b610e8281610e70565b8114610e8c575f80fd5b50565b5f81359050610e9d81610e79565b92915050565b5f60208284031215610eb857610eb7610c89565b5b5f610ec584828501610e8f565b91505092915050565b610ed781610e70565b82525050565b5f602082019050610ef05f830184610ece565b92915050565b5f60208284031215610f0b57610f0a610c89565b5b5f610f1884828501610e0c565b91505092915050565b5f8060408385031215610f3757610f36610c89565b5b5f610f4485828601610e8f565b9250506020610f5585828601610e0c565b9150509250929050565b5f604082019050610f725f830185610dce565b610f7f6020830184610dce565b9392505050565b610f8f81610d40565b82525050565b5f602082019050610fa85f830184610f86565b92915050565b5f82825260208201905092915050565b7f4f6e6c792061646d696e732063616e2075706461746520696e697469616c20735f8201527f74616b6520616d6f756e74000000000000000000000000000000000000000000602082015250565b5f611018602b83610fae565b915061102382610fbe565b604082019050919050565b5f6020820190508181035f8301526110458161100c565b9050919050565b7f4f6e6c792061646d696e732063616e206d6f64696679207669727475616c20695f8201527f6e666f726d6174696f6e00000000000000000000000000000000000000000000602082015250565b5f6110a6602a83610fae565b91506110b18261104c565b604082019050919050565b5f6020820190508181035f8301526110d38161109a565b9050919050565b7f4f6e6c792061646d696e732063616e2075706461746520746f6b656e416464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611134602383610fae565b915061113f826110da565b604082019050919050565b5f6020820190508181035f83015261116181611128565b9050919050565b7f4f6e6c792061646d696e732063616e207570646174652044414f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6111c2602283610fae565b91506111cd82611168565b604082019050919050565b5f6020820190508181035f8301526111ef816111b6565b9050919050565b5f6040820190506112095f830185610dce565b6112166020830184610ece565b939250505056fea2646970667358221220b7c9e702a205380ceff290ce6d172c82c46f41e831504cb903df7ac9f4ab473d64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15CC CODESIZE SUB DUP1 PUSH3 0x15CC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2FC JUMP JUMPDEST PUSH3 0x68 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP6 PUSH3 0xFA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x36B JUMP JUMPDEST PUSH0 PUSH3 0x10D DUP4 DUP4 PUSH3 0x1F5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1EB JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x187 PUSH3 0x258 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x1EF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x28E DUP3 PUSH3 0x263 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A0 DUP2 PUSH3 0x282 JUMP JUMPDEST DUP2 EQ PUSH3 0x2AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2BE DUP2 PUSH3 0x295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D8 DUP2 PUSH3 0x2C4 JUMP JUMPDEST DUP2 EQ PUSH3 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F6 DUP2 PUSH3 0x2CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x317 JUMPI PUSH3 0x316 PUSH3 0x25F JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x326 DUP8 DUP3 DUP9 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x339 DUP8 DUP3 DUP9 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x34C DUP8 DUP3 DUP9 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x35F DUP8 DUP3 DUP9 ADD PUSH3 0x2AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1253 DUP1 PUSH3 0x379 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A30D283 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x9A3CAC6A EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x3A30D283 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x5433E2F5 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x691DE489 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x297 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x26A4E8D2 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x10BC2D44 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x2131C68C EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x22D0D555 EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP3 SWAP2 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP3 SWAP2 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CB JUMPI POP PUSH2 0x3CA DUP3 PUSH2 0x9E2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x43B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x494 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x602 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x68D DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x696 DUP2 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x6A0 DUP4 DUP4 PUSH2 0xA5F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6AE PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71C DUP3 DUP3 PUSH2 0xB4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x913 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x9C9 DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x9D2 DUP2 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x9DC DUP4 DUP4 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5C DUP2 PUSH2 0xA57 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA6A DUP4 DUP4 PUSH2 0x886 JUMP JUMPDEST PUSH2 0xB3E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xADB PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB42 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB5A DUP4 DUP4 PUSH2 0x886 JUMP JUMPDEST ISZERO PUSH2 0xC2E JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBCB PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC32 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC42 DUP3 DUP3 PUSH2 0x886 JUMP JUMPDEST PUSH2 0xC85 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP3 SWAP2 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP2 EQ PUSH2 0xCCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDC DUP2 PUSH2 0xCB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF6 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD04 DUP5 DUP3 DUP6 ADD PUSH2 0xCCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH2 0xD0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3A PUSH0 DUP4 ADD DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6D DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD95 DUP5 DUP3 DUP6 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC7 DUP3 PUSH2 0xD9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD7 DUP2 PUSH2 0xDBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF0 PUSH0 DUP4 ADD DUP5 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDFF DUP2 PUSH2 0xDBD JUMP JUMPDEST DUP2 EQ PUSH2 0xE09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE1A DUP2 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE44 DUP7 DUP3 DUP8 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE55 DUP7 DUP3 DUP8 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE66 DUP7 DUP3 DUP8 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE82 DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP2 EQ PUSH2 0xE8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE9D DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEC5 DUP5 DUP3 DUP6 ADD PUSH2 0xE8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xED7 DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF0 PUSH0 DUP4 ADD DUP5 PUSH2 0xECE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0B JUMPI PUSH2 0xF0A PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF18 DUP5 DUP3 DUP6 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF36 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF44 DUP6 DUP3 DUP7 ADD PUSH2 0xE8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF55 DUP6 DUP3 DUP7 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF72 PUSH0 DUP4 ADD DUP6 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0xF7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDCE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8F DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA8 PUSH0 DUP4 ADD DUP5 PUSH2 0xF86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E2075706461746520696E697469616C2073 PUSH0 DUP3 ADD MSTORE PUSH32 0x74616B6520616D6F756E74000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1018 PUSH1 0x2B DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1023 DUP3 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E206D6F64696679207669727475616C2069 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E666F726D6174696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A6 PUSH1 0x2A DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x10B1 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D3 DUP2 PUSH2 0x109A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E2075706461746520746F6B656E41646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1134 PUSH1 0x23 DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x113F DUP3 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1161 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E207570646174652044414F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11C2 PUSH1 0x22 DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x11CD DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11EF DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1209 PUSH0 DUP4 ADD DUP6 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x1216 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xECE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xC9 0xE7 MUL LOG2 SDIV CODESIZE 0xC 0xEF CALLCODE SWAP1 0xCE PUSH14 0x172C82C46F41E831504CB903DF7A 0xC9 DELEGATECALL 0xAB SELFBALANCE RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "117:2661:5:-:0;;;923:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1040:36;591:23;1063:12;1040:10;;;:36;;:::i;:::-;;1101:13;1086:12;;:28;;;;;;;;;;;;;;;;;;1145:19;1124:18;:40;;;;1187:11;1174:10;;:24;;;;;;;;;;;;;;;;;;923:282;;;;117:2661;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;117:2661:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_464": {
									"entryPoint": 2146,
									"id": 464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 2490,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 3128,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2635,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2655,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_390": {
									"entryPoint": 2888,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2895,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@daoAddress_470": {
									"entryPoint": 1093,
									"id": 470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1468,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getVirtualInfo_555": {
									"entryPoint": 1825,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@grantRole_147": {
									"entryPoint": 1668,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2182,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialStakeAmount_468": {
									"entryPoint": 2046,
									"id": 468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 1702,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2496,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDaoAddress_612": {
									"entryPoint": 2281,
									"id": 612,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setInitialStake_593": {
									"entryPoint": 978,
									"id": 593,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTokenAddress_574": {
									"entryPoint": 1496,
									"id": 574,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVirtualInfo_532": {
									"entryPoint": 1130,
									"id": 532,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_431": {
									"entryPoint": 2530,
									"id": 431,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 857,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenAddress_466": {
									"entryPoint": 2453,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@virtualInfos_459": {
									"entryPoint": 2052,
									"id": 459,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_address": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10865:6",
										"nodeType": "YulBlock",
										"src": "0:10865:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "378:105:6",
													"nodeType": "YulBlock",
													"src": "378:105:6",
													"statements": [
														{
															"nativeSrc": "388:89:6",
															"nodeType": "YulAssignment",
															"src": "388:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:6",
																		"nodeType": "YulLiteral",
																		"src": "410:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:6"
																},
																"nativeSrc": "399:78:6",
																"nodeType": "YulFunctionCall",
																"src": "399:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:6",
														"nodeType": "YulTypedName",
														"src": "360:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:6",
														"nodeType": "YulTypedName",
														"src": "370:7:6",
														"type": ""
													}
												],
												"src": "334:149:6"
											},
											{
												"body": {
													"nativeSrc": "531:78:6",
													"nodeType": "YulBlock",
													"src": "531:78:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:6",
																"nodeType": "YulBlock",
																"src": "587:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:6",
																					"nodeType": "YulLiteral",
																					"src": "596:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "599:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:6"
																			},
																			"nativeSrc": "589:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:6"
																		},
																		"nativeSrc": "589:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:6",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:6"
																				},
																				"nativeSrc": "561:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:6"
																		},
																		"nativeSrc": "551:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nativeSrc": "544:42:6",
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nativeSrc": "541:62:6",
															"nodeType": "YulIf",
															"src": "541:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:6",
														"nodeType": "YulTypedName",
														"src": "524:5:6",
														"type": ""
													}
												],
												"src": "489:120:6"
											},
											{
												"body": {
													"nativeSrc": "666:86:6",
													"nodeType": "YulBlock",
													"src": "666:86:6",
													"statements": [
														{
															"nativeSrc": "676:29:6",
															"nodeType": "YulAssignment",
															"src": "676:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:6"
																},
																"nativeSrc": "685:20:6",
																"nodeType": "YulFunctionCall",
																"src": "685:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:6"
																},
																"nativeSrc": "714:32:6",
																"nodeType": "YulFunctionCall",
																"src": "714:32:6"
															},
															"nativeSrc": "714:32:6",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:6",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:6",
														"nodeType": "YulTypedName",
														"src": "652:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:6",
														"nodeType": "YulTypedName",
														"src": "660:5:6",
														"type": ""
													}
												],
												"src": "615:137:6"
											},
											{
												"body": {
													"nativeSrc": "823:262:6",
													"nodeType": "YulBlock",
													"src": "823:262:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:6",
																"nodeType": "YulBlock",
																"src": "869:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:6"
																			},
																			"nativeSrc": "871:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:6"
																		},
																		"nativeSrc": "871:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:6"
																		},
																		"nativeSrc": "840:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:6",
																		"nodeType": "YulLiteral",
																		"src": "865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:6"
																},
																"nativeSrc": "836:32:6",
																"nodeType": "YulFunctionCall",
																"src": "836:32:6"
															},
															"nativeSrc": "833:119:6",
															"nodeType": "YulIf",
															"src": "833:119:6"
														},
														{
															"nativeSrc": "962:116:6",
															"nodeType": "YulBlock",
															"src": "962:116:6",
															"statements": [
																{
																	"nativeSrc": "977:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:6",
																		"nodeType": "YulLiteral",
																		"src": "991:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:6",
																			"nodeType": "YulTypedName",
																			"src": "981:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:6",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:6"
																				},
																				"nativeSrc": "1036:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:6",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:6"
																		},
																		"nativeSrc": "1016:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:6",
														"nodeType": "YulTypedName",
														"src": "793:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:6",
														"nodeType": "YulTypedName",
														"src": "804:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:6",
														"nodeType": "YulTypedName",
														"src": "816:6:6",
														"type": ""
													}
												],
												"src": "758:327:6"
											},
											{
												"body": {
													"nativeSrc": "1133:48:6",
													"nodeType": "YulBlock",
													"src": "1133:48:6",
													"statements": [
														{
															"nativeSrc": "1143:32:6",
															"nodeType": "YulAssignment",
															"src": "1143:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:6"
																		},
																		"nativeSrc": "1161:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:6"
																},
																"nativeSrc": "1154:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:6",
														"nodeType": "YulTypedName",
														"src": "1115:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:6",
														"nodeType": "YulTypedName",
														"src": "1125:7:6",
														"type": ""
													}
												],
												"src": "1091:90:6"
											},
											{
												"body": {
													"nativeSrc": "1246:50:6",
													"nodeType": "YulBlock",
													"src": "1246:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:6"
																		},
																		"nativeSrc": "1268:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:6"
																},
																"nativeSrc": "1256:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:6"
															},
															"nativeSrc": "1256:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:6",
														"nodeType": "YulTypedName",
														"src": "1234:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:6",
														"nodeType": "YulTypedName",
														"src": "1241:3:6",
														"type": ""
													}
												],
												"src": "1187:109:6"
											},
											{
												"body": {
													"nativeSrc": "1394:118:6",
													"nodeType": "YulBlock",
													"src": "1394:118:6",
													"statements": [
														{
															"nativeSrc": "1404:26:6",
															"nodeType": "YulAssignment",
															"src": "1404:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:6"
																},
																"nativeSrc": "1412:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:6"
																		},
																		"nativeSrc": "1487:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:6"
																},
																"nativeSrc": "1440:65:6",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:6"
															},
															"nativeSrc": "1440:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:6",
														"nodeType": "YulTypedName",
														"src": "1366:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:6",
														"nodeType": "YulTypedName",
														"src": "1378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:6",
														"nodeType": "YulTypedName",
														"src": "1389:4:6",
														"type": ""
													}
												],
												"src": "1302:210:6"
											},
											{
												"body": {
													"nativeSrc": "1563:32:6",
													"nodeType": "YulBlock",
													"src": "1563:32:6",
													"statements": [
														{
															"nativeSrc": "1573:16:6",
															"nodeType": "YulAssignment",
															"src": "1573:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:6",
																"nodeType": "YulIdentifier",
																"src": "1584:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1518:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:6",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:6",
														"nodeType": "YulTypedName",
														"src": "1555:7:6",
														"type": ""
													}
												],
												"src": "1518:77:6"
											},
											{
												"body": {
													"nativeSrc": "1644:79:6",
													"nodeType": "YulBlock",
													"src": "1644:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:6",
																"nodeType": "YulBlock",
																"src": "1701:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:6"
																			},
																			"nativeSrc": "1703:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:6"
																		},
																		"nativeSrc": "1703:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1674:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:6"
																				},
																				"nativeSrc": "1674:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:6"
																		},
																		"nativeSrc": "1664:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:6"
																},
																"nativeSrc": "1657:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:6"
															},
															"nativeSrc": "1654:63:6",
															"nodeType": "YulIf",
															"src": "1654:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1601:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:6",
														"nodeType": "YulTypedName",
														"src": "1637:5:6",
														"type": ""
													}
												],
												"src": "1601:122:6"
											},
											{
												"body": {
													"nativeSrc": "1781:87:6",
													"nodeType": "YulBlock",
													"src": "1781:87:6",
													"statements": [
														{
															"nativeSrc": "1791:29:6",
															"nodeType": "YulAssignment",
															"src": "1791:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:6"
																},
																"nativeSrc": "1800:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1829:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:6"
																},
																"nativeSrc": "1829:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:6"
															},
															"nativeSrc": "1829:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1729:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:6",
														"nodeType": "YulTypedName",
														"src": "1759:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:6",
														"nodeType": "YulTypedName",
														"src": "1767:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:6",
														"nodeType": "YulTypedName",
														"src": "1775:5:6",
														"type": ""
													}
												],
												"src": "1729:139:6"
											},
											{
												"body": {
													"nativeSrc": "1940:263:6",
													"nodeType": "YulBlock",
													"src": "1940:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:6",
																"nodeType": "YulBlock",
																"src": "1986:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:6"
																			},
																			"nativeSrc": "1988:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:6"
																		},
																		"nativeSrc": "1988:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:6"
																		},
																		"nativeSrc": "1957:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:6"
																},
																"nativeSrc": "1953:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:6"
															},
															"nativeSrc": "1950:119:6",
															"nodeType": "YulIf",
															"src": "1950:119:6"
														},
														{
															"nativeSrc": "2079:117:6",
															"nodeType": "YulBlock",
															"src": "2079:117:6",
															"statements": [
																{
																	"nativeSrc": "2094:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:6"
																				},
																				"nativeSrc": "2154:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2133:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:6"
																		},
																		"nativeSrc": "2133:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1874:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:6",
														"nodeType": "YulTypedName",
														"src": "1910:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:6",
														"nodeType": "YulTypedName",
														"src": "1921:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:6",
														"nodeType": "YulTypedName",
														"src": "1933:6:6",
														"type": ""
													}
												],
												"src": "1874:329:6"
											},
											{
												"body": {
													"nativeSrc": "2254:81:6",
													"nodeType": "YulBlock",
													"src": "2254:81:6",
													"statements": [
														{
															"nativeSrc": "2264:65:6",
															"nodeType": "YulAssignment",
															"src": "2264:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2279:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2286:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2275:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:6"
																},
																"nativeSrc": "2275:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2275:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2264:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2209:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2236:5:6",
														"nodeType": "YulTypedName",
														"src": "2236:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2246:7:6",
														"nodeType": "YulTypedName",
														"src": "2246:7:6",
														"type": ""
													}
												],
												"src": "2209:126:6"
											},
											{
												"body": {
													"nativeSrc": "2386:51:6",
													"nodeType": "YulBlock",
													"src": "2386:51:6",
													"statements": [
														{
															"nativeSrc": "2396:35:6",
															"nodeType": "YulAssignment",
															"src": "2396:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2425:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2425:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2407:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2407:17:6"
																},
																"nativeSrc": "2407:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2407:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2396:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2396:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2341:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2368:5:6",
														"nodeType": "YulTypedName",
														"src": "2368:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2378:7:6",
														"nodeType": "YulTypedName",
														"src": "2378:7:6",
														"type": ""
													}
												],
												"src": "2341:96:6"
											},
											{
												"body": {
													"nativeSrc": "2508:53:6",
													"nodeType": "YulBlock",
													"src": "2508:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2530:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:6"
																		},
																		"nativeSrc": "2530:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:6"
																},
																"nativeSrc": "2518:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:6"
															},
															"nativeSrc": "2518:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2443:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:6",
														"nodeType": "YulTypedName",
														"src": "2496:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:6",
														"nodeType": "YulTypedName",
														"src": "2503:3:6",
														"type": ""
													}
												],
												"src": "2443:118:6"
											},
											{
												"body": {
													"nativeSrc": "2665:124:6",
													"nodeType": "YulBlock",
													"src": "2665:124:6",
													"statements": [
														{
															"nativeSrc": "2675:26:6",
															"nodeType": "YulAssignment",
															"src": "2675:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:6"
																},
																"nativeSrc": "2683:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:6"
																		},
																		"nativeSrc": "2764:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2711:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:6"
																},
																"nativeSrc": "2711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:6"
															},
															"nativeSrc": "2711:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2567:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:6",
														"nodeType": "YulTypedName",
														"src": "2637:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:6",
														"nodeType": "YulTypedName",
														"src": "2649:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:6",
														"nodeType": "YulTypedName",
														"src": "2660:4:6",
														"type": ""
													}
												],
												"src": "2567:222:6"
											},
											{
												"body": {
													"nativeSrc": "2838:79:6",
													"nodeType": "YulBlock",
													"src": "2838:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:6",
																"nodeType": "YulBlock",
																"src": "2895:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:6"
																			},
																			"nativeSrc": "2897:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:6"
																		},
																		"nativeSrc": "2897:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:6"
																				},
																				"nativeSrc": "2868:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:6"
																		},
																		"nativeSrc": "2858:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:6"
																},
																"nativeSrc": "2851:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:6"
															},
															"nativeSrc": "2848:63:6",
															"nodeType": "YulIf",
															"src": "2848:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:6",
														"nodeType": "YulTypedName",
														"src": "2831:5:6",
														"type": ""
													}
												],
												"src": "2795:122:6"
											},
											{
												"body": {
													"nativeSrc": "2975:87:6",
													"nodeType": "YulBlock",
													"src": "2975:87:6",
													"statements": [
														{
															"nativeSrc": "2985:29:6",
															"nodeType": "YulAssignment",
															"src": "2985:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:6"
																},
																"nativeSrc": "2994:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:6"
																},
																"nativeSrc": "3023:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:6"
															},
															"nativeSrc": "3023:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:6",
														"nodeType": "YulTypedName",
														"src": "2953:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:6",
														"nodeType": "YulTypedName",
														"src": "2961:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:6",
														"nodeType": "YulTypedName",
														"src": "2969:5:6",
														"type": ""
													}
												],
												"src": "2923:139:6"
											},
											{
												"body": {
													"nativeSrc": "3168:519:6",
													"nodeType": "YulBlock",
													"src": "3168:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3214:83:6",
																"nodeType": "YulBlock",
																"src": "3214:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3216:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3216:77:6"
																			},
																			"nativeSrc": "3216:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3216:79:6"
																		},
																		"nativeSrc": "3216:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3189:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3198:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3185:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:6"
																		},
																		"nativeSrc": "3185:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:6"
																},
																"nativeSrc": "3181:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3181:32:6"
															},
															"nativeSrc": "3178:119:6",
															"nodeType": "YulIf",
															"src": "3178:119:6"
														},
														{
															"nativeSrc": "3307:117:6",
															"nodeType": "YulBlock",
															"src": "3307:117:6",
															"statements": [
																{
																	"nativeSrc": "3322:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3336:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3336:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3326:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3326:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3351:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3351:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3386:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3386:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3397:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3397:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3382:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3382:3:6"
																				},
																				"nativeSrc": "3382:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3382:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3406:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3406:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3361:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3361:20:6"
																		},
																		"nativeSrc": "3361:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3361:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3351:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3351:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3434:118:6",
															"nodeType": "YulBlock",
															"src": "3434:118:6",
															"statements": [
																{
																	"nativeSrc": "3449:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3449:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3463:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3453:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3453:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3479:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3479:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3514:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3514:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3525:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3525:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3510:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3510:3:6"
																				},
																				"nativeSrc": "3510:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3534:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3534:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3489:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3489:20:6"
																		},
																		"nativeSrc": "3489:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3489:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3479:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3479:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3562:118:6",
															"nodeType": "YulBlock",
															"src": "3562:118:6",
															"statements": [
																{
																	"nativeSrc": "3577:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3577:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3591:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3581:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3581:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3607:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3607:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3642:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3642:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3653:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3653:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3638:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:6"
																				},
																				"nativeSrc": "3638:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3638:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3662:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3662:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3617:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3617:20:6"
																		},
																		"nativeSrc": "3617:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3617:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3607:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3607:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_address",
												"nativeSrc": "3068:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3122:9:6",
														"nodeType": "YulTypedName",
														"src": "3122:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3133:7:6",
														"nodeType": "YulTypedName",
														"src": "3133:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3145:6:6",
														"nodeType": "YulTypedName",
														"src": "3145:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3153:6:6",
														"nodeType": "YulTypedName",
														"src": "3153:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3161:6:6",
														"nodeType": "YulTypedName",
														"src": "3161:6:6",
														"type": ""
													}
												],
												"src": "3068:619:6"
											},
											{
												"body": {
													"nativeSrc": "3738:32:6",
													"nodeType": "YulBlock",
													"src": "3738:32:6",
													"statements": [
														{
															"nativeSrc": "3748:16:6",
															"nodeType": "YulAssignment",
															"src": "3748:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "3759:5:6",
																"nodeType": "YulIdentifier",
																"src": "3759:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3748:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3748:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3693:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3720:5:6",
														"nodeType": "YulTypedName",
														"src": "3720:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3730:7:6",
														"nodeType": "YulTypedName",
														"src": "3730:7:6",
														"type": ""
													}
												],
												"src": "3693:77:6"
											},
											{
												"body": {
													"nativeSrc": "3819:79:6",
													"nodeType": "YulBlock",
													"src": "3819:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3876:16:6",
																"nodeType": "YulBlock",
																"src": "3876:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3885:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3885:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3888:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3888:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3878:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3878:6:6"
																			},
																			"nativeSrc": "3878:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3878:12:6"
																		},
																		"nativeSrc": "3878:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3878:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3842:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3842:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3867:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3867:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "3849:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3849:17:6"
																				},
																				"nativeSrc": "3849:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3849:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3839:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3839:2:6"
																		},
																		"nativeSrc": "3839:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3839:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3832:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3832:6:6"
																},
																"nativeSrc": "3832:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3832:43:6"
															},
															"nativeSrc": "3829:63:6",
															"nodeType": "YulIf",
															"src": "3829:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "3776:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3812:5:6",
														"nodeType": "YulTypedName",
														"src": "3812:5:6",
														"type": ""
													}
												],
												"src": "3776:122:6"
											},
											{
												"body": {
													"nativeSrc": "3956:87:6",
													"nodeType": "YulBlock",
													"src": "3956:87:6",
													"statements": [
														{
															"nativeSrc": "3966:29:6",
															"nodeType": "YulAssignment",
															"src": "3966:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3988:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3988:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3975:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3975:12:6"
																},
																"nativeSrc": "3975:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3975:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3966:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3966:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4031:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4031:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "4004:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "4004:26:6"
																},
																"nativeSrc": "4004:33:6",
																"nodeType": "YulFunctionCall",
																"src": "4004:33:6"
															},
															"nativeSrc": "4004:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "4004:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3904:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3934:6:6",
														"nodeType": "YulTypedName",
														"src": "3934:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3942:3:6",
														"nodeType": "YulTypedName",
														"src": "3942:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3950:5:6",
														"nodeType": "YulTypedName",
														"src": "3950:5:6",
														"type": ""
													}
												],
												"src": "3904:139:6"
											},
											{
												"body": {
													"nativeSrc": "4115:263:6",
													"nodeType": "YulBlock",
													"src": "4115:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4161:83:6",
																"nodeType": "YulBlock",
																"src": "4161:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4163:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4163:77:6"
																			},
																			"nativeSrc": "4163:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4163:79:6"
																		},
																		"nativeSrc": "4163:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4163:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4145:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4145:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4132:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4132:3:6"
																		},
																		"nativeSrc": "4132:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4132:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4157:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4157:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4128:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:6"
																},
																"nativeSrc": "4128:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4128:32:6"
															},
															"nativeSrc": "4125:119:6",
															"nodeType": "YulIf",
															"src": "4125:119:6"
														},
														{
															"nativeSrc": "4254:117:6",
															"nodeType": "YulBlock",
															"src": "4254:117:6",
															"statements": [
																{
																	"nativeSrc": "4269:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4269:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4283:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4283:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4273:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4273:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4298:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4298:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4333:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4333:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4344:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4344:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4329:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4329:3:6"
																				},
																				"nativeSrc": "4329:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4329:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4353:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4353:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4308:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4308:20:6"
																		},
																		"nativeSrc": "4308:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4308:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4298:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4298:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "4049:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4085:9:6",
														"nodeType": "YulTypedName",
														"src": "4085:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4096:7:6",
														"nodeType": "YulTypedName",
														"src": "4096:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4108:6:6",
														"nodeType": "YulTypedName",
														"src": "4108:6:6",
														"type": ""
													}
												],
												"src": "4049:329:6"
											},
											{
												"body": {
													"nativeSrc": "4449:53:6",
													"nodeType": "YulBlock",
													"src": "4449:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4466:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4466:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4489:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4489:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4471:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "4471:17:6"
																		},
																		"nativeSrc": "4471:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4471:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4459:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4459:6:6"
																},
																"nativeSrc": "4459:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4459:37:6"
															},
															"nativeSrc": "4459:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "4459:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4384:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4437:5:6",
														"nodeType": "YulTypedName",
														"src": "4437:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4444:3:6",
														"nodeType": "YulTypedName",
														"src": "4444:3:6",
														"type": ""
													}
												],
												"src": "4384:118:6"
											},
											{
												"body": {
													"nativeSrc": "4606:124:6",
													"nodeType": "YulBlock",
													"src": "4606:124:6",
													"statements": [
														{
															"nativeSrc": "4616:26:6",
															"nodeType": "YulAssignment",
															"src": "4616:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4628:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4628:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4639:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4639:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4624:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4624:3:6"
																},
																"nativeSrc": "4624:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4624:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4616:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4616:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4696:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4696:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4709:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4709:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4720:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4720:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4705:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4705:3:6"
																		},
																		"nativeSrc": "4705:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4705:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4652:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4652:43:6"
																},
																"nativeSrc": "4652:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4652:71:6"
															},
															"nativeSrc": "4652:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4652:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4508:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4578:9:6",
														"nodeType": "YulTypedName",
														"src": "4578:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4590:6:6",
														"nodeType": "YulTypedName",
														"src": "4590:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4601:4:6",
														"nodeType": "YulTypedName",
														"src": "4601:4:6",
														"type": ""
													}
												],
												"src": "4508:222:6"
											},
											{
												"body": {
													"nativeSrc": "4802:263:6",
													"nodeType": "YulBlock",
													"src": "4802:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4848:83:6",
																"nodeType": "YulBlock",
																"src": "4848:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4850:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4850:77:6"
																			},
																			"nativeSrc": "4850:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4850:79:6"
																		},
																		"nativeSrc": "4850:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4850:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4823:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4823:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4832:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4819:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4819:3:6"
																		},
																		"nativeSrc": "4819:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4819:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4844:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4844:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4815:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4815:3:6"
																},
																"nativeSrc": "4815:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4815:32:6"
															},
															"nativeSrc": "4812:119:6",
															"nodeType": "YulIf",
															"src": "4812:119:6"
														},
														{
															"nativeSrc": "4941:117:6",
															"nodeType": "YulBlock",
															"src": "4941:117:6",
															"statements": [
																{
																	"nativeSrc": "4956:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4956:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4970:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4970:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4960:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4960:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4985:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4985:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5020:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5020:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5031:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5031:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5016:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5016:3:6"
																				},
																				"nativeSrc": "5016:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5016:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5040:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5040:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4995:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:20:6"
																		},
																		"nativeSrc": "4995:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4995:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4985:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4985:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4736:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4772:9:6",
														"nodeType": "YulTypedName",
														"src": "4772:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4783:7:6",
														"nodeType": "YulTypedName",
														"src": "4783:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4795:6:6",
														"nodeType": "YulTypedName",
														"src": "4795:6:6",
														"type": ""
													}
												],
												"src": "4736:329:6"
											},
											{
												"body": {
													"nativeSrc": "5154:391:6",
													"nodeType": "YulBlock",
													"src": "5154:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5200:83:6",
																"nodeType": "YulBlock",
																"src": "5200:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5202:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5202:77:6"
																			},
																			"nativeSrc": "5202:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5202:79:6"
																		},
																		"nativeSrc": "5202:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5202:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5175:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5175:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5184:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5184:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5171:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:6"
																		},
																		"nativeSrc": "5171:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5171:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5196:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5196:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5167:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:6"
																},
																"nativeSrc": "5167:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5167:32:6"
															},
															"nativeSrc": "5164:119:6",
															"nodeType": "YulIf",
															"src": "5164:119:6"
														},
														{
															"nativeSrc": "5293:117:6",
															"nodeType": "YulBlock",
															"src": "5293:117:6",
															"statements": [
																{
																	"nativeSrc": "5308:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5308:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5322:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5312:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5312:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5337:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5372:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5372:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5383:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5368:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5368:3:6"
																				},
																				"nativeSrc": "5368:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5347:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5347:20:6"
																		},
																		"nativeSrc": "5347:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5337:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5337:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5420:118:6",
															"nodeType": "YulBlock",
															"src": "5420:118:6",
															"statements": [
																{
																	"nativeSrc": "5435:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5435:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5449:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5449:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5439:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5439:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5465:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5465:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5500:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5500:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5511:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5511:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5496:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5496:3:6"
																				},
																				"nativeSrc": "5496:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5475:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5475:20:6"
																		},
																		"nativeSrc": "5475:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5475:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5465:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5465:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "5071:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5116:9:6",
														"nodeType": "YulTypedName",
														"src": "5116:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5127:7:6",
														"nodeType": "YulTypedName",
														"src": "5127:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5139:6:6",
														"nodeType": "YulTypedName",
														"src": "5139:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5147:6:6",
														"nodeType": "YulTypedName",
														"src": "5147:6:6",
														"type": ""
													}
												],
												"src": "5071:474:6"
											},
											{
												"body": {
													"nativeSrc": "5677:206:6",
													"nodeType": "YulBlock",
													"src": "5677:206:6",
													"statements": [
														{
															"nativeSrc": "5687:26:6",
															"nodeType": "YulAssignment",
															"src": "5687:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5699:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5699:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5710:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5710:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5695:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5695:3:6"
																},
																"nativeSrc": "5695:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5695:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5687:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5687:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5767:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5767:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5780:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5791:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5791:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5776:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:6"
																		},
																		"nativeSrc": "5776:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5776:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5723:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5723:43:6"
																},
																"nativeSrc": "5723:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5723:71:6"
															},
															"nativeSrc": "5723:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5723:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5848:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5848:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5861:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5872:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5872:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5857:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:6"
																		},
																		"nativeSrc": "5857:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5857:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5804:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5804:43:6"
																},
																"nativeSrc": "5804:72:6",
																"nodeType": "YulFunctionCall",
																"src": "5804:72:6"
															},
															"nativeSrc": "5804:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "5804:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5551:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5641:9:6",
														"nodeType": "YulTypedName",
														"src": "5641:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5653:6:6",
														"nodeType": "YulTypedName",
														"src": "5653:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5661:6:6",
														"nodeType": "YulTypedName",
														"src": "5661:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5672:4:6",
														"nodeType": "YulTypedName",
														"src": "5672:4:6",
														"type": ""
													}
												],
												"src": "5551:332:6"
											},
											{
												"body": {
													"nativeSrc": "5954:53:6",
													"nodeType": "YulBlock",
													"src": "5954:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5971:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5971:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5994:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5994:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5976:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5976:17:6"
																		},
																		"nativeSrc": "5976:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5976:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5964:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:6"
																},
																"nativeSrc": "5964:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5964:37:6"
															},
															"nativeSrc": "5964:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5964:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5889:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5942:5:6",
														"nodeType": "YulTypedName",
														"src": "5942:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5949:3:6",
														"nodeType": "YulTypedName",
														"src": "5949:3:6",
														"type": ""
													}
												],
												"src": "5889:118:6"
											},
											{
												"body": {
													"nativeSrc": "6111:124:6",
													"nodeType": "YulBlock",
													"src": "6111:124:6",
													"statements": [
														{
															"nativeSrc": "6121:26:6",
															"nodeType": "YulAssignment",
															"src": "6121:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6133:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6133:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6144:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6144:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6129:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6129:3:6"
																},
																"nativeSrc": "6129:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6129:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6121:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6121:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6201:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6201:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6214:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6214:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6225:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6225:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6210:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6210:3:6"
																		},
																		"nativeSrc": "6210:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6210:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6157:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6157:43:6"
																},
																"nativeSrc": "6157:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6157:71:6"
															},
															"nativeSrc": "6157:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6157:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6013:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6083:9:6",
														"nodeType": "YulTypedName",
														"src": "6083:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6095:6:6",
														"nodeType": "YulTypedName",
														"src": "6095:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6106:4:6",
														"nodeType": "YulTypedName",
														"src": "6106:4:6",
														"type": ""
													}
												],
												"src": "6013:222:6"
											},
											{
												"body": {
													"nativeSrc": "6337:73:6",
													"nodeType": "YulBlock",
													"src": "6337:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6354:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6354:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6359:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6359:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6347:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6347:6:6"
																},
																"nativeSrc": "6347:19:6",
																"nodeType": "YulFunctionCall",
																"src": "6347:19:6"
															},
															"nativeSrc": "6347:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "6347:19:6"
														},
														{
															"nativeSrc": "6375:29:6",
															"nodeType": "YulAssignment",
															"src": "6375:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6394:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6394:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6399:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6399:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6390:3:6"
																},
																"nativeSrc": "6390:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6390:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6375:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "6375:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6241:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6309:3:6",
														"nodeType": "YulTypedName",
														"src": "6309:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6314:6:6",
														"nodeType": "YulTypedName",
														"src": "6314:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6325:11:6",
														"nodeType": "YulTypedName",
														"src": "6325:11:6",
														"type": ""
													}
												],
												"src": "6241:169:6"
											},
											{
												"body": {
													"nativeSrc": "6522:124:6",
													"nodeType": "YulBlock",
													"src": "6522:124:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6544:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6544:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6552:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6552:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6540:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:6"
																		},
																		"nativeSrc": "6540:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6540:14:6"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e732063616e2075706461746520696e697469616c2073",
																		"kind": "string",
																		"nativeSrc": "6556:34:6",
																		"nodeType": "YulLiteral",
																		"src": "6556:34:6",
																		"type": "",
																		"value": "Only admins can update initial s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6533:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6533:6:6"
																},
																"nativeSrc": "6533:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6533:58:6"
															},
															"nativeSrc": "6533:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "6533:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6612:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6612:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6620:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6620:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6608:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:6"
																		},
																		"nativeSrc": "6608:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6608:15:6"
																	},
																	{
																		"hexValue": "74616b6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "6625:13:6",
																		"nodeType": "YulLiteral",
																		"src": "6625:13:6",
																		"type": "",
																		"value": "take amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6601:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:6"
																},
																"nativeSrc": "6601:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6601:38:6"
															},
															"nativeSrc": "6601:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "6601:38:6"
														}
													]
												},
												"name": "store_literal_in_memory_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72",
												"nativeSrc": "6416:230:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6514:6:6",
														"nodeType": "YulTypedName",
														"src": "6514:6:6",
														"type": ""
													}
												],
												"src": "6416:230:6"
											},
											{
												"body": {
													"nativeSrc": "6798:220:6",
													"nodeType": "YulBlock",
													"src": "6798:220:6",
													"statements": [
														{
															"nativeSrc": "6808:74:6",
															"nodeType": "YulAssignment",
															"src": "6808:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6874:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6874:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6879:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6879:2:6",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6815:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6815:58:6"
																},
																"nativeSrc": "6815:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6815:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6808:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6808:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6980:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6980:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72",
																	"nativeSrc": "6891:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6891:88:6"
																},
																"nativeSrc": "6891:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6891:93:6"
															},
															"nativeSrc": "6891:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6891:93:6"
														},
														{
															"nativeSrc": "6993:19:6",
															"nodeType": "YulAssignment",
															"src": "6993:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7004:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7004:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7009:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7009:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7000:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7000:3:6"
																},
																"nativeSrc": "7000:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7000:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6993:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6993:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6652:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6786:3:6",
														"nodeType": "YulTypedName",
														"src": "6786:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6794:3:6",
														"nodeType": "YulTypedName",
														"src": "6794:3:6",
														"type": ""
													}
												],
												"src": "6652:366:6"
											},
											{
												"body": {
													"nativeSrc": "7195:248:6",
													"nodeType": "YulBlock",
													"src": "7195:248:6",
													"statements": [
														{
															"nativeSrc": "7205:26:6",
															"nodeType": "YulAssignment",
															"src": "7205:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7217:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7217:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7228:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7228:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7213:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7213:3:6"
																},
																"nativeSrc": "7213:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7213:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7205:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7205:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7252:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7252:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7263:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7263:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7248:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:6"
																		},
																		"nativeSrc": "7248:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7248:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7271:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7271:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7277:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7277:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7267:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:6"
																		},
																		"nativeSrc": "7267:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7267:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7241:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7241:6:6"
																},
																"nativeSrc": "7241:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7241:47:6"
															},
															"nativeSrc": "7241:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7241:47:6"
														},
														{
															"nativeSrc": "7297:139:6",
															"nodeType": "YulAssignment",
															"src": "7297:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7431:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7431:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7305:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7305:124:6"
																},
																"nativeSrc": "7305:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7305:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7297:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7297:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7024:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7175:9:6",
														"nodeType": "YulTypedName",
														"src": "7175:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7190:4:6",
														"nodeType": "YulTypedName",
														"src": "7190:4:6",
														"type": ""
													}
												],
												"src": "7024:419:6"
											},
											{
												"body": {
													"nativeSrc": "7555:123:6",
													"nodeType": "YulBlock",
													"src": "7555:123:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7577:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7577:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7585:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7585:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7573:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7573:3:6"
																		},
																		"nativeSrc": "7573:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7573:14:6"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e732063616e206d6f64696679207669727475616c2069",
																		"kind": "string",
																		"nativeSrc": "7589:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7589:34:6",
																		"type": "",
																		"value": "Only admins can modify virtual i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7566:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7566:6:6"
																},
																"nativeSrc": "7566:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7566:58:6"
															},
															"nativeSrc": "7566:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7566:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7645:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7645:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7653:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7653:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7641:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7641:3:6"
																		},
																		"nativeSrc": "7641:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7641:15:6"
																	},
																	{
																		"hexValue": "6e666f726d6174696f6e",
																		"kind": "string",
																		"nativeSrc": "7658:12:6",
																		"nodeType": "YulLiteral",
																		"src": "7658:12:6",
																		"type": "",
																		"value": "nformation"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7634:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:6"
																},
																"nativeSrc": "7634:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7634:37:6"
															},
															"nativeSrc": "7634:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7634:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583",
												"nativeSrc": "7449:229:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7547:6:6",
														"nodeType": "YulTypedName",
														"src": "7547:6:6",
														"type": ""
													}
												],
												"src": "7449:229:6"
											},
											{
												"body": {
													"nativeSrc": "7830:220:6",
													"nodeType": "YulBlock",
													"src": "7830:220:6",
													"statements": [
														{
															"nativeSrc": "7840:74:6",
															"nodeType": "YulAssignment",
															"src": "7840:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7906:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7906:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7911:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7911:2:6",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7847:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7847:58:6"
																},
																"nativeSrc": "7847:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7847:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7840:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7840:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8012:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8012:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583",
																	"nativeSrc": "7923:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7923:88:6"
																},
																"nativeSrc": "7923:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7923:93:6"
															},
															"nativeSrc": "7923:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7923:93:6"
														},
														{
															"nativeSrc": "8025:19:6",
															"nodeType": "YulAssignment",
															"src": "8025:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8036:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8036:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8041:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8032:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8032:3:6"
																},
																"nativeSrc": "8032:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8032:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8025:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8025:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7684:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7818:3:6",
														"nodeType": "YulTypedName",
														"src": "7818:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7826:3:6",
														"nodeType": "YulTypedName",
														"src": "7826:3:6",
														"type": ""
													}
												],
												"src": "7684:366:6"
											},
											{
												"body": {
													"nativeSrc": "8227:248:6",
													"nodeType": "YulBlock",
													"src": "8227:248:6",
													"statements": [
														{
															"nativeSrc": "8237:26:6",
															"nodeType": "YulAssignment",
															"src": "8237:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8249:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8249:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8260:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8260:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8245:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8245:3:6"
																},
																"nativeSrc": "8245:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8245:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8237:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8237:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8284:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8284:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8295:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8295:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8280:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:6"
																		},
																		"nativeSrc": "8280:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8280:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8303:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8303:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8309:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8309:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8299:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8299:3:6"
																		},
																		"nativeSrc": "8299:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8299:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8273:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:6"
																},
																"nativeSrc": "8273:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8273:47:6"
															},
															"nativeSrc": "8273:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8273:47:6"
														},
														{
															"nativeSrc": "8329:139:6",
															"nodeType": "YulAssignment",
															"src": "8329:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8463:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8463:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8337:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8337:124:6"
																},
																"nativeSrc": "8337:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8337:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8329:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8329:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8056:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8207:9:6",
														"nodeType": "YulTypedName",
														"src": "8207:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8222:4:6",
														"nodeType": "YulTypedName",
														"src": "8222:4:6",
														"type": ""
													}
												],
												"src": "8056:419:6"
											},
											{
												"body": {
													"nativeSrc": "8587:116:6",
													"nodeType": "YulBlock",
													"src": "8587:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8609:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8609:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8617:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8617:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8605:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8605:3:6"
																		},
																		"nativeSrc": "8605:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8605:14:6"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e732063616e2075706461746520746f6b656e41646472",
																		"kind": "string",
																		"nativeSrc": "8621:34:6",
																		"nodeType": "YulLiteral",
																		"src": "8621:34:6",
																		"type": "",
																		"value": "Only admins can update tokenAddr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8598:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8598:6:6"
																},
																"nativeSrc": "8598:58:6",
																"nodeType": "YulFunctionCall",
																"src": "8598:58:6"
															},
															"nativeSrc": "8598:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "8598:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8677:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8677:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8685:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8685:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8673:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8673:3:6"
																		},
																		"nativeSrc": "8673:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8673:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "8690:5:6",
																		"nodeType": "YulLiteral",
																		"src": "8690:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:30:6"
															},
															"nativeSrc": "8666:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8666:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905",
												"nativeSrc": "8481:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8579:6:6",
														"nodeType": "YulTypedName",
														"src": "8579:6:6",
														"type": ""
													}
												],
												"src": "8481:222:6"
											},
											{
												"body": {
													"nativeSrc": "8855:220:6",
													"nodeType": "YulBlock",
													"src": "8855:220:6",
													"statements": [
														{
															"nativeSrc": "8865:74:6",
															"nodeType": "YulAssignment",
															"src": "8865:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8931:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8931:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8936:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8936:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8872:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8872:58:6"
																},
																"nativeSrc": "8872:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8872:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8865:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9037:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9037:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905",
																	"nativeSrc": "8948:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8948:88:6"
																},
																"nativeSrc": "8948:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8948:93:6"
															},
															"nativeSrc": "8948:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8948:93:6"
														},
														{
															"nativeSrc": "9050:19:6",
															"nodeType": "YulAssignment",
															"src": "9050:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9061:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9061:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9066:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9066:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9057:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9057:3:6"
																},
																"nativeSrc": "9057:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9057:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9050:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9050:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8709:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8843:3:6",
														"nodeType": "YulTypedName",
														"src": "8843:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8851:3:6",
														"nodeType": "YulTypedName",
														"src": "8851:3:6",
														"type": ""
													}
												],
												"src": "8709:366:6"
											},
											{
												"body": {
													"nativeSrc": "9252:248:6",
													"nodeType": "YulBlock",
													"src": "9252:248:6",
													"statements": [
														{
															"nativeSrc": "9262:26:6",
															"nodeType": "YulAssignment",
															"src": "9262:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9274:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9274:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9285:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9285:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9270:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9270:3:6"
																},
																"nativeSrc": "9270:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9270:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9262:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9262:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9309:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9309:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9320:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9320:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9305:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9305:3:6"
																		},
																		"nativeSrc": "9305:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9305:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9328:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9328:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9334:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9334:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9324:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:6"
																		},
																		"nativeSrc": "9324:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9324:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9298:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9298:6:6"
																},
																"nativeSrc": "9298:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9298:47:6"
															},
															"nativeSrc": "9298:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9298:47:6"
														},
														{
															"nativeSrc": "9354:139:6",
															"nodeType": "YulAssignment",
															"src": "9354:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9488:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9488:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9362:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9362:124:6"
																},
																"nativeSrc": "9362:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9362:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9354:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9354:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9081:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9232:9:6",
														"nodeType": "YulTypedName",
														"src": "9232:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9247:4:6",
														"nodeType": "YulTypedName",
														"src": "9247:4:6",
														"type": ""
													}
												],
												"src": "9081:419:6"
											},
											{
												"body": {
													"nativeSrc": "9612:115:6",
													"nodeType": "YulBlock",
													"src": "9612:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9634:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9634:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9642:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9642:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9630:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9630:3:6"
																		},
																		"nativeSrc": "9630:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9630:14:6"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e732063616e207570646174652044414f206164647265",
																		"kind": "string",
																		"nativeSrc": "9646:34:6",
																		"nodeType": "YulLiteral",
																		"src": "9646:34:6",
																		"type": "",
																		"value": "Only admins can update DAO addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9623:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9623:6:6"
																},
																"nativeSrc": "9623:58:6",
																"nodeType": "YulFunctionCall",
																"src": "9623:58:6"
															},
															"nativeSrc": "9623:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "9623:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9702:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9702:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9710:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9710:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9698:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9698:3:6"
																		},
																		"nativeSrc": "9698:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9698:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "9715:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9715:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9691:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9691:6:6"
																},
																"nativeSrc": "9691:29:6",
																"nodeType": "YulFunctionCall",
																"src": "9691:29:6"
															},
															"nativeSrc": "9691:29:6",
															"nodeType": "YulExpressionStatement",
															"src": "9691:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4",
												"nativeSrc": "9506:221:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9604:6:6",
														"nodeType": "YulTypedName",
														"src": "9604:6:6",
														"type": ""
													}
												],
												"src": "9506:221:6"
											},
											{
												"body": {
													"nativeSrc": "9879:220:6",
													"nodeType": "YulBlock",
													"src": "9879:220:6",
													"statements": [
														{
															"nativeSrc": "9889:74:6",
															"nodeType": "YulAssignment",
															"src": "9889:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9955:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9955:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9960:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9960:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9896:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9896:58:6"
																},
																"nativeSrc": "9896:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9896:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9889:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9889:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10061:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10061:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4",
																	"nativeSrc": "9972:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9972:88:6"
																},
																"nativeSrc": "9972:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9972:93:6"
															},
															"nativeSrc": "9972:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9972:93:6"
														},
														{
															"nativeSrc": "10074:19:6",
															"nodeType": "YulAssignment",
															"src": "10074:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10085:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10085:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10090:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10090:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10081:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:6"
																},
																"nativeSrc": "10081:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10081:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10074:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10074:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9733:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9867:3:6",
														"nodeType": "YulTypedName",
														"src": "9867:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9875:3:6",
														"nodeType": "YulTypedName",
														"src": "9875:3:6",
														"type": ""
													}
												],
												"src": "9733:366:6"
											},
											{
												"body": {
													"nativeSrc": "10276:248:6",
													"nodeType": "YulBlock",
													"src": "10276:248:6",
													"statements": [
														{
															"nativeSrc": "10286:26:6",
															"nodeType": "YulAssignment",
															"src": "10286:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10298:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10298:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10309:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10309:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10294:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10294:3:6"
																},
																"nativeSrc": "10294:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10294:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10286:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10286:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10333:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10333:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10344:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10344:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10329:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10329:3:6"
																		},
																		"nativeSrc": "10329:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10329:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10352:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10352:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10358:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10358:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10348:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10348:3:6"
																		},
																		"nativeSrc": "10348:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10348:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10322:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10322:6:6"
																},
																"nativeSrc": "10322:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10322:47:6"
															},
															"nativeSrc": "10322:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10322:47:6"
														},
														{
															"nativeSrc": "10378:139:6",
															"nodeType": "YulAssignment",
															"src": "10378:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10512:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10512:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10386:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10386:124:6"
																},
																"nativeSrc": "10386:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10386:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10378:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10378:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10105:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10256:9:6",
														"nodeType": "YulTypedName",
														"src": "10256:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10271:4:6",
														"nodeType": "YulTypedName",
														"src": "10271:4:6",
														"type": ""
													}
												],
												"src": "10105:419:6"
											},
											{
												"body": {
													"nativeSrc": "10656:206:6",
													"nodeType": "YulBlock",
													"src": "10656:206:6",
													"statements": [
														{
															"nativeSrc": "10666:26:6",
															"nodeType": "YulAssignment",
															"src": "10666:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10678:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10678:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10689:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10689:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10674:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10674:3:6"
																},
																"nativeSrc": "10674:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10674:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10666:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10666:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10746:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10746:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10759:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10759:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10770:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10770:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10755:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10755:3:6"
																		},
																		"nativeSrc": "10755:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10755:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10702:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10702:43:6"
																},
																"nativeSrc": "10702:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10702:71:6"
															},
															"nativeSrc": "10702:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10702:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10827:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10827:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10840:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10840:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10851:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10851:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10836:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10836:3:6"
																		},
																		"nativeSrc": "10836:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10836:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10783:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10783:43:6"
																},
																"nativeSrc": "10783:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10783:72:6"
															},
															"nativeSrc": "10783:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10783:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "10530:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10620:9:6",
														"nodeType": "YulTypedName",
														"src": "10620:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10632:6:6",
														"nodeType": "YulTypedName",
														"src": "10632:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10640:6:6",
														"nodeType": "YulTypedName",
														"src": "10640:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10651:4:6",
														"nodeType": "YulTypedName",
														"src": "10651:4:6",
														"type": ""
													}
												],
												"src": "10530:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admins can update initial s\")\n\n        mstore(add(memPtr, 32), \"take amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admins can modify virtual i\")\n\n        mstore(add(memPtr, 32), \"nformation\")\n\n    }\n\n    function abi_encode_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admins can update tokenAddr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only admins can update DAO addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c80633a30d283116100a057806391d148541161006f57806391d14854146102b55780639a3cac6a146102e55780639d76ea5814610301578063a217fddf1461031f578063d547741f1461033d57610109565b80633a30d283146102175780635433e2f514610248578063691de4891461026657806375b238fc1461029757610109565b8063248a9ca3116100dc578063248a9ca31461019357806326a4e8d2146101c35780632f2ff15d146101df57806336568abe146101fb57610109565b806301ffc9a71461010d57806310bc2d441461013d5780632131c68c1461015957806322d0d55514610177575b5f80fd5b61012760048036038101906101229190610ce2565b610359565b6040516101349190610d27565b60405180910390f35b61015760048036038101906101529190610d73565b6103d2565b005b610161610445565b60405161016e9190610ddd565b60405180910390f35b610191600480360381019061018c9190610e20565b61046a565b005b6101ad60048036038101906101a89190610ea3565b6105bc565b6040516101ba9190610edd565b60405180910390f35b6101dd60048036038101906101d89190610ef6565b6105d8565b005b6101f960048036038101906101f49190610f21565b610684565b005b61021560048036038101906102109190610f21565b6106a6565b005b610231600480360381019061022c9190610d73565b610721565b60405161023f929190610f5f565b60405180910390f35b6102506107fe565b60405161025d9190610f95565b60405180910390f35b610280600480360381019061027b9190610d73565b610804565b60405161028e929190610f5f565b60405180910390f35b61029f610862565b6040516102ac9190610edd565b60405180910390f35b6102cf60048036038101906102ca9190610f21565b610886565b6040516102dc9190610d27565b60405180910390f35b6102ff60048036038101906102fa9190610ef6565b6108e9565b005b610309610995565b6040516103169190610ddd565b60405180910390f35b6103276109ba565b6040516103349190610edd565b60405180910390f35b61035760048036038101906103529190610f21565b6109c0565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cb57506103ca826109e2565b5b9050919050565b6103fc7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b61043b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104329061102e565b60405180910390fd5b8060038190555050565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104947fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b6104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca906110bc565b60405180910390fd5b5f60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681525090508060015f8681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050505050565b5f805f8381526020019081526020015f20600101549050919050565b6106027fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b610641576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106389061114a565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61068d826105bc565b61069681610a4b565b6106a08383610a5f565b50505050565b6106ae610b48565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610712576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61071c8282610b4f565b505050565b5f805f60015f8581526020019081526020015f206040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050805f015181602001519250925050915091565b60035481565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6109137fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610886565b610952576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610949906111d8565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f801b81565b6109c9826105bc565b6109d281610a4b565b6109dc8383610b4f565b50505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5c81610a57610b48565b610c38565b50565b5f610a6a8383610886565b610b3e5760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610adb610b48565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b42565b5f90505b92915050565b5f33905090565b5f610b5a8383610886565b15610c2e575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bcb610b48565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c32565b5f90505b92915050565b610c428282610886565b610c855780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610c7c9291906111f6565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610cc181610c8d565b8114610ccb575f80fd5b50565b5f81359050610cdc81610cb8565b92915050565b5f60208284031215610cf757610cf6610c89565b5b5f610d0484828501610cce565b91505092915050565b5f8115159050919050565b610d2181610d0d565b82525050565b5f602082019050610d3a5f830184610d18565b92915050565b5f819050919050565b610d5281610d40565b8114610d5c575f80fd5b50565b5f81359050610d6d81610d49565b92915050565b5f60208284031215610d8857610d87610c89565b5b5f610d9584828501610d5f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dc782610d9e565b9050919050565b610dd781610dbd565b82525050565b5f602082019050610df05f830184610dce565b92915050565b610dff81610dbd565b8114610e09575f80fd5b50565b5f81359050610e1a81610df6565b92915050565b5f805f60608486031215610e3757610e36610c89565b5b5f610e4486828701610d5f565b9350506020610e5586828701610e0c565b9250506040610e6686828701610e0c565b9150509250925092565b5f819050919050565b610e8281610e70565b8114610e8c575f80fd5b50565b5f81359050610e9d81610e79565b92915050565b5f60208284031215610eb857610eb7610c89565b5b5f610ec584828501610e8f565b91505092915050565b610ed781610e70565b82525050565b5f602082019050610ef05f830184610ece565b92915050565b5f60208284031215610f0b57610f0a610c89565b5b5f610f1884828501610e0c565b91505092915050565b5f8060408385031215610f3757610f36610c89565b5b5f610f4485828601610e8f565b9250506020610f5585828601610e0c565b9150509250929050565b5f604082019050610f725f830185610dce565b610f7f6020830184610dce565b9392505050565b610f8f81610d40565b82525050565b5f602082019050610fa85f830184610f86565b92915050565b5f82825260208201905092915050565b7f4f6e6c792061646d696e732063616e2075706461746520696e697469616c20735f8201527f74616b6520616d6f756e74000000000000000000000000000000000000000000602082015250565b5f611018602b83610fae565b915061102382610fbe565b604082019050919050565b5f6020820190508181035f8301526110458161100c565b9050919050565b7f4f6e6c792061646d696e732063616e206d6f64696679207669727475616c20695f8201527f6e666f726d6174696f6e00000000000000000000000000000000000000000000602082015250565b5f6110a6602a83610fae565b91506110b18261104c565b604082019050919050565b5f6020820190508181035f8301526110d38161109a565b9050919050565b7f4f6e6c792061646d696e732063616e2075706461746520746f6b656e416464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f611134602383610fae565b915061113f826110da565b604082019050919050565b5f6020820190508181035f83015261116181611128565b9050919050565b7f4f6e6c792061646d696e732063616e207570646174652044414f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f6111c2602283610fae565b91506111cd82611168565b604082019050919050565b5f6020820190508181035f8301526111ef816111b6565b9050919050565b5f6040820190506112095f830185610dce565b6112166020830184610ece565b939250505056fea2646970667358221220b7c9e702a205380ceff290ce6d172c82c46f41e831504cb903df7ac9f4ab473d64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3A30D283 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x9A3CAC6A EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x3A30D283 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x5433E2F5 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x691DE489 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x297 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x26A4E8D2 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FB JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x10BC2D44 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x2131C68C EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x22D0D555 EQ PUSH2 0x177 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xCE2 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0xE20 JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0xEA3 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x5D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP3 SWAP2 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28E SWAP3 SWAP2 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH2 0x862 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0xD27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CB JUMPI POP PUSH2 0x3CA DUP3 PUSH2 0x9E2 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FC PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x43B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x432 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x494 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x602 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x68D DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x696 DUP2 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x6A0 DUP4 DUP4 PUSH2 0xA5F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6AE PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71C DUP3 DUP3 PUSH2 0xB4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD SWAP3 POP SWAP3 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x913 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x886 JUMP JUMPDEST PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP1 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x9C9 DUP3 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x9D2 DUP2 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x9DC DUP4 DUP4 PUSH2 0xB4F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5C DUP2 PUSH2 0xA57 PUSH2 0xB48 JUMP JUMPDEST PUSH2 0xC38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA6A DUP4 DUP4 PUSH2 0x886 JUMP JUMPDEST PUSH2 0xB3E JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xADB PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB42 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB5A DUP4 DUP4 PUSH2 0x886 JUMP JUMPDEST ISZERO PUSH2 0xC2E JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBCB PUSH2 0xB48 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC32 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC42 DUP3 DUP3 PUSH2 0x886 JUMP JUMPDEST PUSH2 0xC85 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP3 SWAP2 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xC8D JUMP JUMPDEST DUP2 EQ PUSH2 0xCCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDC DUP2 PUSH2 0xCB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH2 0xCF6 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD04 DUP5 DUP3 DUP6 ADD PUSH2 0xCCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH2 0xD0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3A PUSH0 DUP4 ADD DUP5 PUSH2 0xD18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD52 DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP2 EQ PUSH2 0xD5C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD6D DUP2 PUSH2 0xD49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH2 0xD87 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD95 DUP5 DUP3 DUP6 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC7 DUP3 PUSH2 0xD9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD7 DUP2 PUSH2 0xDBD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF0 PUSH0 DUP4 ADD DUP5 PUSH2 0xDCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDFF DUP2 PUSH2 0xDBD JUMP JUMPDEST DUP2 EQ PUSH2 0xE09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE1A DUP2 PUSH2 0xDF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE37 JUMPI PUSH2 0xE36 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE44 DUP7 DUP3 DUP8 ADD PUSH2 0xD5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xE55 DUP7 DUP3 DUP8 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xE66 DUP7 DUP3 DUP8 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE82 DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP2 EQ PUSH2 0xE8C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE9D DUP2 PUSH2 0xE79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB7 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEC5 DUP5 DUP3 DUP6 ADD PUSH2 0xE8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xED7 DUP2 PUSH2 0xE70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEF0 PUSH0 DUP4 ADD DUP5 PUSH2 0xECE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0B JUMPI PUSH2 0xF0A PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF18 DUP5 DUP3 DUP6 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH2 0xF36 PUSH2 0xC89 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF44 DUP6 DUP3 DUP7 ADD PUSH2 0xE8F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF55 DUP6 DUP3 DUP7 ADD PUSH2 0xE0C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF72 PUSH0 DUP4 ADD DUP6 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0xF7F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDCE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8F DUP2 PUSH2 0xD40 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFA8 PUSH0 DUP4 ADD DUP5 PUSH2 0xF86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E2075706461746520696E697469616C2073 PUSH0 DUP3 ADD MSTORE PUSH32 0x74616B6520616D6F756E74000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1018 PUSH1 0x2B DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x1023 DUP3 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E206D6F64696679207669727475616C2069 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E666F726D6174696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A6 PUSH1 0x2A DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x10B1 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D3 DUP2 PUSH2 0x109A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E2075706461746520746F6B656E41646472 PUSH0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1134 PUSH1 0x23 DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x113F DUP3 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1161 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792061646D696E732063616E207570646174652044414F206164647265 PUSH0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11C2 PUSH1 0x22 DUP4 PUSH2 0xFAE JUMP JUMPDEST SWAP2 POP PUSH2 0x11CD DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11EF DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1209 PUSH0 DUP4 ADD DUP6 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x1216 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xECE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xC9 0xE7 MUL LOG2 SDIV CODESIZE 0xC 0xEF CALLCODE SWAP1 0xCE PUSH14 0x172C82C46F41E831504CB903DF7A 0xC9 DELEGATECALL 0xAB SELFBALANCE RETURNDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "117:2661:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2297:219:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;800:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1269:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2019:193:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1738:203:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;734:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;433:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;554:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2592:184:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;672:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2297:219:5:-;2378:31;591:23;2398:10;2378:7;:31::i;:::-;2370:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2488:21;2467:18;:42;;;;2297:219;:::o;800:25::-;;;;;;;;;;;;;:::o;1269:405::-;1383:31;591:23;1403:10;1383:7;:31::i;:::-;1375:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1471:33;1507:111;;;;;;;;1549:14;1507:111;;;;;;1593:14;1507:111;;;;;1471:147;;1653:14;1629:12;:21;1642:7;1629:21;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1365:309;1269:405;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;2019:193:5:-;2094:31;591:23;2114:10;2094:7;:31::i;:::-;2086:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2190:15;2175:12;;:30;;;;;;;;;;;;;;;;;;2019:193;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1738:203:5:-;1800:7;1809;1828:23;1854:12;:21;1867:7;1854:21;;;;;;;;;;;1828:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1893:4;:19;;;1914:4;:19;;;1885:49;;;;;1738:203;;;:::o;734:33::-;;;;:::o;433:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;554:60::-;591:23;554:60;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2592:184:5:-;2663:31;591:23;2683:10;2663:7;:31::i;:::-;2655:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2756:13;2743:10;;:26;;;;;;;;;;;;;;;;;;2592:184;:::o;672:27::-;;;;;;;;;;;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;4642:138::-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;762:146:3:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:6:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:126::-;2246:7;2286:42;2279:5;2275:54;2264:65;;2209:126;;;:::o;2341:96::-;2378:7;2407:24;2425:5;2407:24;:::i;:::-;2396:35;;2341:96;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:619::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3336:1;3361:53;3406:7;3397:6;3386:9;3382:22;3361:53;:::i;:::-;3351:63;;3307:117;3463:2;3489:53;3534:7;3525:6;3514:9;3510:22;3489:53;:::i;:::-;3479:63;;3434:118;3591:2;3617:53;3662:7;3653:6;3642:9;3638:22;3617:53;:::i;:::-;3607:63;;3562:118;3068:619;;;;;:::o;3693:77::-;3730:7;3759:5;3748:16;;3693:77;;;:::o;3776:122::-;3849:24;3867:5;3849:24;:::i;:::-;3842:5;3839:35;3829:63;;3888:1;3885;3878:12;3829:63;3776:122;:::o;3904:139::-;3950:5;3988:6;3975:20;3966:29;;4004:33;4031:5;4004:33;:::i;:::-;3904:139;;;;:::o;4049:329::-;4108:6;4157:2;4145:9;4136:7;4132:23;4128:32;4125:119;;;4163:79;;:::i;:::-;4125:119;4283:1;4308:53;4353:7;4344:6;4333:9;4329:22;4308:53;:::i;:::-;4298:63;;4254:117;4049:329;;;;:::o;4384:118::-;4471:24;4489:5;4471:24;:::i;:::-;4466:3;4459:37;4384:118;;:::o;4508:222::-;4601:4;4639:2;4628:9;4624:18;4616:26;;4652:71;4720:1;4709:9;4705:17;4696:6;4652:71;:::i;:::-;4508:222;;;;:::o;4736:329::-;4795:6;4844:2;4832:9;4823:7;4819:23;4815:32;4812:119;;;4850:79;;:::i;:::-;4812:119;4970:1;4995:53;5040:7;5031:6;5020:9;5016:22;4995:53;:::i;:::-;4985:63;;4941:117;4736:329;;;;:::o;5071:474::-;5139:6;5147;5196:2;5184:9;5175:7;5171:23;5167:32;5164:119;;;5202:79;;:::i;:::-;5164:119;5322:1;5347:53;5392:7;5383:6;5372:9;5368:22;5347:53;:::i;:::-;5337:63;;5293:117;5449:2;5475:53;5520:7;5511:6;5500:9;5496:22;5475:53;:::i;:::-;5465:63;;5420:118;5071:474;;;;;:::o;5551:332::-;5672:4;5710:2;5699:9;5695:18;5687:26;;5723:71;5791:1;5780:9;5776:17;5767:6;5723:71;:::i;:::-;5804:72;5872:2;5861:9;5857:18;5848:6;5804:72;:::i;:::-;5551:332;;;;;:::o;5889:118::-;5976:24;5994:5;5976:24;:::i;:::-;5971:3;5964:37;5889:118;;:::o;6013:222::-;6106:4;6144:2;6133:9;6129:18;6121:26;;6157:71;6225:1;6214:9;6210:17;6201:6;6157:71;:::i;:::-;6013:222;;;;:::o;6241:169::-;6325:11;6359:6;6354:3;6347:19;6399:4;6394:3;6390:14;6375:29;;6241:169;;;;:::o;6416:230::-;6556:34;6552:1;6544:6;6540:14;6533:58;6625:13;6620:2;6612:6;6608:15;6601:38;6416:230;:::o;6652:366::-;6794:3;6815:67;6879:2;6874:3;6815:67;:::i;:::-;6808:74;;6891:93;6980:3;6891:93;:::i;:::-;7009:2;7004:3;7000:12;6993:19;;6652:366;;;:::o;7024:419::-;7190:4;7228:2;7217:9;7213:18;7205:26;;7277:9;7271:4;7267:20;7263:1;7252:9;7248:17;7241:47;7305:131;7431:4;7305:131;:::i;:::-;7297:139;;7024:419;;;:::o;7449:229::-;7589:34;7585:1;7577:6;7573:14;7566:58;7658:12;7653:2;7645:6;7641:15;7634:37;7449:229;:::o;7684:366::-;7826:3;7847:67;7911:2;7906:3;7847:67;:::i;:::-;7840:74;;7923:93;8012:3;7923:93;:::i;:::-;8041:2;8036:3;8032:12;8025:19;;7684:366;;;:::o;8056:419::-;8222:4;8260:2;8249:9;8245:18;8237:26;;8309:9;8303:4;8299:20;8295:1;8284:9;8280:17;8273:47;8337:131;8463:4;8337:131;:::i;:::-;8329:139;;8056:419;;;:::o;8481:222::-;8621:34;8617:1;8609:6;8605:14;8598:58;8690:5;8685:2;8677:6;8673:15;8666:30;8481:222;:::o;8709:366::-;8851:3;8872:67;8936:2;8931:3;8872:67;:::i;:::-;8865:74;;8948:93;9037:3;8948:93;:::i;:::-;9066:2;9061:3;9057:12;9050:19;;8709:366;;;:::o;9081:419::-;9247:4;9285:2;9274:9;9270:18;9262:26;;9334:9;9328:4;9324:20;9320:1;9309:9;9305:17;9298:47;9362:131;9488:4;9362:131;:::i;:::-;9354:139;;9081:419;;;:::o;9506:221::-;9646:34;9642:1;9634:6;9630:14;9623:58;9715:4;9710:2;9702:6;9698:15;9691:29;9506:221;:::o;9733:366::-;9875:3;9896:67;9960:2;9955:3;9896:67;:::i;:::-;9889:74;;9972:93;10061:3;9972:93;:::i;:::-;10090:2;10085:3;10081:12;10074:19;;9733:366;;;:::o;10105:419::-;10271:4;10309:2;10298:9;10294:18;10286:26;;10358:9;10352:4;10348:20;10344:1;10333:9;10329:17;10322:47;10386:131;10512:4;10386:131;:::i;:::-;10378:139;;10105:419;;;:::o;10530:332::-;10651:4;10689:2;10678:9;10674:18;10666:26;;10702:71;10770:1;10759:9;10755:17;10746:6;10702:71;:::i;:::-;10783:72;10851:2;10840:9;10836:18;10827:6;10783:72;:::i;:::-;10530:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "938200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "414",
								"DEFAULT_ADMIN_ROLE()": "418",
								"daoAddress()": "2576",
								"getRoleAdmin(bytes32)": "infinite",
								"getVirtualInfo(uint256)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3144",
								"initialStakeAmount()": "2470",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setDaoAddress(address)": "27126",
								"setInitialStake(uint256)": "24928",
								"setTokenAddress(address)": "27127",
								"setVirtualInfo(uint256,address,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"tokenAddress()": "2574",
								"virtualInfos(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 2778,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 923,
									"end": 1205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 591,
									"end": 614,
									"name": "PUSH",
									"source": 5,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1063,
									"end": 1075,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1040,
									"end": 1050,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1040,
									"end": 1050,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1076,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1040,
									"end": 1076,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1076,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1040,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1076,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1101,
									"end": 1114,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1098,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1086,
									"end": 1098,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1086,
									"end": 1114,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1145,
									"end": 1164,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1142,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1124,
									"end": 1164,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1164,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1164,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1164,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1187,
									"end": 1198,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1184,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1174,
									"end": 1184,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1174,
									"end": 1198,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1205,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 2778,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7c9e702a205380ceff290ce6d172c82c46f41e831504cb903df7ac9f4ab473d64736f6c63430008170033",
									".code": [
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "3A30D283"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "9A3CAC6A"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "9D76EA58"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "3A30D283"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "5433E2F5"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "691DE489"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "75B238FC"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "26A4E8D2"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "10BC2D44"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "2131C68C"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "22D0D555"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 117,
											"end": 2778,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2297,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2297,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 800,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 800,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1269,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2019,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2019,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1738,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1738,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1738,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 734,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 734,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 433,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 433,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 433,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 554,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 554,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2592,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2592,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 672,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 672,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 591,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2398,
											"end": 2408,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2378,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2409,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2378,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2370,
											"end": 2457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2370,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2467,
											"end": 2509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2509,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 800,
											"end": 825,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 591,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1403,
											"end": 1413,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1383,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1414,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1383,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1375,
											"end": 1461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1375,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1549,
											"end": 1563,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1607,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1650,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1365,
											"end": 1674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 591,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2114,
											"end": 2124,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2094,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2094,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2086,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2086,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2187,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2175,
											"end": 2187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2175,
											"end": 2205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1800,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1874,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1934,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1934,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1885,
											"end": 1934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1738,
											"end": 1941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 734,
											"end": 767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 433,
											"end": 484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 433,
											"end": 484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 554,
											"end": 614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 554,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 591,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2683,
											"end": 2693,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2663,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2663,
											"end": 2694,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2663,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2655,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2655,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2769,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2592,
											"end": 2776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 699,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 672,
											"end": 699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2329,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2407,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3687,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3068,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3159,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3161,
											"end": 3167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3212,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3198,
											"end": 3207,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3196,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3208,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3181,
											"end": 3213,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3178,
											"end": 3297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3216,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3216,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3216,
											"end": 3295,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3216,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3297,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3178,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3361,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3406,
											"end": 3413,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3386,
											"end": 3395,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3361,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3361,
											"end": 3414,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3361,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3414,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3465,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3489,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3542,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3434,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3638,
											"end": 3660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3617,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3687,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3748,
											"end": 3764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3898,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3776,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3867,
											"end": 3872,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3849,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3873,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3849,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3874,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3829,
											"end": 3892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3890,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3829,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4043,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3904,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3950,
											"end": 3955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3995,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3966,
											"end": 3995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4031,
											"end": 4036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4004,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4004,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4043,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4043,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 4043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4378,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4049,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4159,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4145,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4132,
											"end": 4155,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4160,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4244,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4125,
											"end": 4244,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4163,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4163,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4163,
											"end": 4242,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 4163,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4244,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4125,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4333,
											"end": 4342,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4329,
											"end": 4351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4308,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4308,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4254,
											"end": 4371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4378,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4049,
											"end": 4378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4502,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4384,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4489,
											"end": 4494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4471,
											"end": 4495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4495,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4471,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4384,
											"end": 4502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4730,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4508,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4601,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4639,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4624,
											"end": 4642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4616,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4720,
											"end": 4721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4718,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4705,
											"end": 4722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4696,
											"end": 4702,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4652,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4723,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4652,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4730,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 5065,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4736,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 4801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4844,
											"end": 4846,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4842,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4815,
											"end": 4847,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4931,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4812,
											"end": 4931,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4850,
											"end": 4929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4850,
											"end": 4929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4850,
											"end": 4929,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4850,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4931,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4812,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5016,
											"end": 5038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4995,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4995,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 5065,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 5065,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 5065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 5065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4736,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5182,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5194,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5167,
											"end": 5199,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5202,
											"end": 5281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5202,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5164,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5392,
											"end": 5399,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5368,
											"end": 5390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5347,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5347,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5337,
											"end": 5400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5449,
											"end": 5451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5511,
											"end": 5517,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5500,
											"end": 5509,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5475,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5475,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5465,
											"end": 5528,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5465,
											"end": 5528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5883,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5551,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5672,
											"end": 5676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5710,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5699,
											"end": 5708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5789,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5776,
											"end": 5793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5767,
											"end": 5773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5723,
											"end": 5794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5794,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5723,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5861,
											"end": 5870,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5854,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5804,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5876,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5804,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5883,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5551,
											"end": 5883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5994,
											"end": 5999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5976,
											"end": 6000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 5974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 6001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6235,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 6013,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6146,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6133,
											"end": 6142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6157,
											"end": 6228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6013,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6410,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6241,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6399,
											"end": 6403,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6394,
											"end": 6397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6375,
											"end": 6404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6375,
											"end": 6404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6241,
											"end": 6410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 6646,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6416,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C792061646D696E732063616E2075706461746520696E697469616C2073"
										},
										{
											"begin": 6552,
											"end": 6553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6540,
											"end": 6554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "74616B6520616D6F756E74000000000000000000000000000000000000000000"
										},
										{
											"begin": 6620,
											"end": 6622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6608,
											"end": 6623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 6646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 6646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 7018,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6652,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6794,
											"end": 6797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6879,
											"end": 6881,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 6874,
											"end": 6877,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6815,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6815,
											"end": 6882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6815,
											"end": 6882,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6815,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6808,
											"end": 6882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6891,
											"end": 6984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6891,
											"end": 6984,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6891,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7004,
											"end": 7007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7000,
											"end": 7012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 7018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 7018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 7018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 7018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7443,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7024,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7190,
											"end": 7194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7217,
											"end": 7226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7277,
											"end": 7286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7271,
											"end": 7275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7267,
											"end": 7287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7241,
											"end": 7288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7305,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7305,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7305,
											"end": 7436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7305,
											"end": 7436,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7305,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7443,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7024,
											"end": 7443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7678,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7449,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7589,
											"end": 7623,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C792061646D696E732063616E206D6F64696679207669727475616C2069"
										},
										{
											"begin": 7585,
											"end": 7586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7566,
											"end": 7624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 7670,
											"name": "PUSH",
											"source": 6,
											"value": "6E666F726D6174696F6E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 7653,
											"end": 7655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7641,
											"end": 7656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7678,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 8050,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7684,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7826,
											"end": 7829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7911,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 7906,
											"end": 7909,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7847,
											"end": 7914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7914,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 7847,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7840,
											"end": 7914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7840,
											"end": 7914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8012,
											"end": 8015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7923,
											"end": 8016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7923,
											"end": 8016,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7923,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8041,
											"end": 8043,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8036,
											"end": 8039,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8032,
											"end": 8044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8025,
											"end": 8044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 8050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 8050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 8050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7684,
											"end": 8050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8056,
											"end": 8475,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 8056,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8222,
											"end": 8226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8260,
											"end": 8262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8249,
											"end": 8258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8245,
											"end": 8263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8303,
											"end": 8307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8296,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8293,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8280,
											"end": 8297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8463,
											"end": 8467,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 8337,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8468,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8337,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8329,
											"end": 8468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8329,
											"end": 8468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8056,
											"end": 8475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8056,
											"end": 8475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8056,
											"end": 8475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8056,
											"end": 8475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8703,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8481,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 8655,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C792061646D696E732063616E2075706461746520746F6B656E41646472"
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8615,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8605,
											"end": 8619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8695,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8685,
											"end": 8687,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8677,
											"end": 8683,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8688,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8666,
											"end": 8696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 9075,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 8709,
											"end": 9075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8851,
											"end": 8854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8872,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 8936,
											"end": 8938,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 8931,
											"end": 8934,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8872,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 8872,
											"end": 8939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8872,
											"end": 8939,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 8872,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8865,
											"end": 8939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9037,
											"end": 9040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 8948,
											"end": 9041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 9041,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 8948,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9068,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9061,
											"end": 9064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9069,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 9075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 9075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 9075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8709,
											"end": 9075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9081,
											"end": 9500,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 9081,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9251,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9285,
											"end": 9287,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9274,
											"end": 9283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9262,
											"end": 9288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9262,
											"end": 9288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9334,
											"end": 9343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9328,
											"end": 9332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9320,
											"end": 9321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9305,
											"end": 9322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9298,
											"end": 9345,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 9488,
											"end": 9492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9362,
											"end": 9493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9362,
											"end": 9493,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 9362,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9081,
											"end": 9500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9081,
											"end": 9500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9081,
											"end": 9500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9081,
											"end": 9500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9727,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9506,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9646,
											"end": 9680,
											"name": "PUSH",
											"source": 6,
											"value": "4F6E6C792061646D696E732063616E207570646174652044414F206164647265"
										},
										{
											"begin": 9642,
											"end": 9643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9623,
											"end": 9681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9715,
											"end": 9719,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9710,
											"end": 9712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9702,
											"end": 9708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9691,
											"end": 9720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 10099,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9733,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9875,
											"end": 9878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 9960,
											"end": 9962,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9955,
											"end": 9958,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 9896,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9963,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 9896,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9889,
											"end": 9963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9889,
											"end": 9963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9972,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 10061,
											"end": 10064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9972,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9972,
											"end": 10065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9972,
											"end": 10065,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9972,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10090,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 10099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 10099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 10099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9733,
											"end": 10099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10524,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10105,
											"end": 10524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10309,
											"end": 10311,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10294,
											"end": 10312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10286,
											"end": 10312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10286,
											"end": 10312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10358,
											"end": 10367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10368,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10344,
											"end": 10345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10342,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10329,
											"end": 10346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10322,
											"end": 10369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 10512,
											"end": 10516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10386,
											"end": 10517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10517,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 10386,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10378,
											"end": 10517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10862,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10530,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10691,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10678,
											"end": 10687,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10674,
											"end": 10692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 10770,
											"end": 10771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10759,
											"end": 10768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10755,
											"end": 10772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10746,
											"end": 10752,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 10702,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10702,
											"end": 10773,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 10702,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10840,
											"end": 10849,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10836,
											"end": 10854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 10833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10783,
											"end": 10855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10783,
											"end": 10855,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 10783,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10862,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10862,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10530,
											"end": 10862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/3_Virtual_Factory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"daoAddress()": "2131c68c",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getVirtualInfo(uint256)": "3a30d283",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialStakeAmount()": "5433e2f5",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setDaoAddress(address)": "9a3cac6a",
							"setInitialStake(uint256)": "10bc2d44",
							"setTokenAddress(address)": "26a4e8d2",
							"setVirtualInfo(uint256,address,address)": "22d0d555",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenAddress()": "9d76ea58",
							"virtualInfos(uint256)": "691de489"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_initialStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_daoAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getVirtualInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDaoAddress\",\"type\":\"address\"}],\"name\":\"setDaoAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newInitialStakeAmount\",\"type\":\"uint256\"}],\"name\":\"setInitialStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newTokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"virtualAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"}],\"name\":\"setVirtualInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"virtualInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"virtualAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_Virtual_Factory.sol\":\"VirtualFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/3_Virtual_Factory.sol\":{\"keccak256\":\"0x45d16dbd1e6f6af2f2bca4d96fa9041173429018de4ee229760025c1260a4e36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b3fdbab09664b840167e6db1c675d561c923d2c4dcfe846c129d7aca13c3bb\",\"dweb:/ipfs/QmNhim8uJQo5GUDy3VhPLtCvyxw3fbX2pXCpkB9SsubZpX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 459,
								"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
								"label": "virtualInfos",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(VirtualInfo)454_storage)"
							},
							{
								"astId": 466,
								"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 468,
								"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
								"label": "initialStakeAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 470,
								"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
								"label": "daoAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_struct(VirtualInfo)454_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct VirtualFactory.VirtualInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(VirtualInfo)454_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(VirtualInfo)454_storage": {
								"encoding": "inplace",
								"label": "struct VirtualFactory.VirtualInfo",
								"members": [
									{
										"astId": 451,
										"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
										"label": "virtualAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 453,
										"contract": "contracts/3_Virtual_Factory.sol:VirtualFactory",
										"label": "stakingAddress",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 409,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 433,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								432,
								444,
								378,
								408
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 431,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							408
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 386,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 385,
												"id": 388,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 408,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 395,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 394,
												"id": 397,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 408,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 403,
												"id": 405,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 408,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 409,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							432
						],
						"IERC165": [
							444
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 445,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 411,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 444,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 414,
										"name": "IERC165",
										"nameLocations": [
											"687:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 444,
										"src": "687:7:3"
									},
									"id": 415,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								444
							],
							"name": "ERC165",
							"nameLocation": "677:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										443
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "844:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "861:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 425,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "881:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$444_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 424,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$444",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 422,
												"id": 429,
												"nodeType": "Return",
												"src": "854:47:3"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "789:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "838:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:3"
									},
									"scope": 432,
									"src": "762:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 433,
							"src": "659:251:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							444
						]
					},
					"id": 445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 444,
							"linearizedBaseContracts": [
								444
							],
							"name": "IERC165",
							"nameLocation": "431:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "817:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 437,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "860:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:4"
									},
									"scope": 444,
									"src": "790:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 445,
							"src": "421:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:4"
				},
				"id": 4
			},
			"contracts/3_Virtual_Factory.sol": {
				"ast": {
					"absolutePath": "contracts/3_Virtual_Factory.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							408
						],
						"ERC165": [
							432
						],
						"IAccessControl": [
							378
						],
						"VirtualFactory": [
							613
						]
					},
					"id": 614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 614,
							"sourceUnit": 296,
							"src": "57:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 448,
										"name": "AccessControl",
										"nameLocations": [
											"144:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "144:13:5"
									},
									"id": 449,
									"nodeType": "InheritanceSpecifier",
									"src": "144:13:5"
								}
							],
							"canonicalName": "VirtualFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 613,
							"linearizedBaseContracts": [
								613,
								295,
								432,
								444,
								378,
								408
							],
							"name": "VirtualFactory",
							"nameLocation": "126:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "VirtualFactory.VirtualInfo",
									"id": 454,
									"members": [
										{
											"constant": false,
											"id": 451,
											"mutability": "mutable",
											"name": "virtualAddress",
											"nameLocation": "266:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 454,
											"src": "258:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 450,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "258:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 453,
											"mutability": "mutable",
											"name": "stakingAddress",
											"nameLocation": "298:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 454,
											"src": "290:22:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 452,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "290:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VirtualInfo",
									"nameLocation": "236:11:5",
									"nodeType": "StructDefinition",
									"scope": 613,
									"src": "229:90:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "691de489",
									"id": 459,
									"mutability": "mutable",
									"name": "virtualInfos",
									"nameLocation": "472:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "433:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_VirtualInfo_$454_storage_$",
										"typeString": "mapping(uint256 => struct VirtualFactory.VirtualInfo)"
									},
									"typeName": {
										"id": 458,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 455,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "441:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "433:31:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_VirtualInfo_$454_storage_$",
											"typeString": "mapping(uint256 => struct VirtualFactory.VirtualInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 457,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 456,
												"name": "VirtualInfo",
												"nameLocations": [
													"452:11:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 454,
												"src": "452:11:5"
											},
											"referencedDeclaration": 454,
											"src": "452:11:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VirtualInfo_$454_storage_ptr",
												"typeString": "struct VirtualFactory.VirtualInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 464,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "578:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "554:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 460,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "554:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 462,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "601:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 461,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "591:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "591:23:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 466,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "687:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "672:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 465,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5433e2f5",
									"id": 468,
									"mutability": "mutable",
									"name": "initialStakeAmount",
									"nameLocation": "749:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "734:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 467,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2131c68c",
									"id": 470,
									"mutability": "mutable",
									"name": "daoAddress",
									"nameLocation": "815:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 613,
									"src": "800:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 469,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "800:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "1030:175:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "1051:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 483,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "1063:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 481,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1040:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1040:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1040:36:5"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "1086:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 487,
														"name": "_tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1101:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1086:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "1086:28:5"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "initialStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "1124:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "_initialStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "1145:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1124:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1124:40:5"
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "1174:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 495,
														"name": "_daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "1187:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1174:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "1174:24:5"
											}
										]
									},
									"id": 499,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "defaultAdmin",
												"nameLocation": "943:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "935:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "965:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "957:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_initialStakeAmount",
												"nameLocation": "988:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "980:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_daoAddress",
												"nameLocation": "1017:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1009:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:95:5"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1030:0:5"
									},
									"scope": 613,
									"src": "923:282:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "1365:309:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 510,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "1391:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 511,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1403:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1407:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1403:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 509,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1383:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1383:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e732063616e206d6f64696679207669727475616c20696e666f726d6174696f6e",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583",
																"typeString": "literal_string \"Only admins can modify virtual information\""
															},
															"value": "Only admins can modify virtual information"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_008c40e579848b6b918b347bec9531f7ad8509927ec8aa4ade3049baf1d91583",
																"typeString": "literal_string \"Only admins can modify virtual information\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1375:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "1375:86:5"
											},
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "newVirtualInfo",
														"nameLocation": "1490:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "1471:33:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VirtualInfo_$454_memory_ptr",
															"typeString": "struct VirtualFactory.VirtualInfo"
														},
														"typeName": {
															"id": 518,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 517,
																"name": "VirtualInfo",
																"nameLocations": [
																	"1471:11:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 454,
																"src": "1471:11:5"
															},
															"referencedDeclaration": 454,
															"src": "1471:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VirtualInfo_$454_storage_ptr",
																"typeString": "struct VirtualFactory.VirtualInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "virtualAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1549:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "stakingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "1593:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 520,
														"name": "VirtualInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "1507:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_VirtualInfo_$454_storage_ptr_$",
															"typeString": "type(struct VirtualFactory.VirtualInfo storage pointer)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1533:14:5",
														"1577:14:5"
													],
													"names": [
														"virtualAddress",
														"stakingAddress"
													],
													"nodeType": "FunctionCall",
													"src": "1507:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VirtualInfo_$454_memory_ptr",
														"typeString": "struct VirtualFactory.VirtualInfo memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1471:147:5"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 525,
															"name": "virtualInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "1629:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_VirtualInfo_$454_storage_$",
																"typeString": "mapping(uint256 => struct VirtualFactory.VirtualInfo storage ref)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1642:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1629:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VirtualInfo_$454_storage",
															"typeString": "struct VirtualFactory.VirtualInfo storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "newVirtualInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "1653:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VirtualInfo_$454_memory_ptr",
															"typeString": "struct VirtualFactory.VirtualInfo memory"
														}
													},
													"src": "1629:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VirtualInfo_$454_storage",
														"typeString": "struct VirtualFactory.VirtualInfo storage ref"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "1629:38:5"
											}
										]
									},
									"functionSelector": "22d0d555",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setVirtualInfo",
									"nameLocation": "1278:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1301:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1293:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "virtualAddress",
												"nameLocation": "1318:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1310:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "stakingAddress",
												"nameLocation": "1342:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1334:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:65:5"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:0:5"
									},
									"scope": 613,
									"src": "1269:405:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1818:123:5",
										"statements": [
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "1847:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 554,
														"src": "1828:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VirtualInfo_$454_memory_ptr",
															"typeString": "struct VirtualFactory.VirtualInfo"
														},
														"typeName": {
															"id": 542,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 541,
																"name": "VirtualInfo",
																"nameLocations": [
																	"1828:11:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 454,
																"src": "1828:11:5"
															},
															"referencedDeclaration": 454,
															"src": "1828:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VirtualInfo_$454_storage_ptr",
																"typeString": "struct VirtualFactory.VirtualInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"baseExpression": {
														"id": 544,
														"name": "virtualInfos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "1854:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_VirtualInfo_$454_storage_$",
															"typeString": "mapping(uint256 => struct VirtualFactory.VirtualInfo storage ref)"
														}
													},
													"id": 546,
													"indexExpression": {
														"id": 545,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "1867:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1854:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VirtualInfo_$454_storage",
														"typeString": "struct VirtualFactory.VirtualInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1828:47:5"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 548,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "1893:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VirtualInfo_$454_memory_ptr",
																	"typeString": "struct VirtualFactory.VirtualInfo memory"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1898:14:5",
															"memberName": "virtualAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 451,
															"src": "1893:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 550,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "1914:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VirtualInfo_$454_memory_ptr",
																	"typeString": "struct VirtualFactory.VirtualInfo memory"
																}
															},
															"id": 551,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1919:14:5",
															"memberName": "stakingAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 453,
															"src": "1914:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 552,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1892:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 540,
												"id": 553,
												"nodeType": "Return",
												"src": "1885:49:5"
											}
										]
									},
									"functionSelector": "3a30d283",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVirtualInfo",
									"nameLocation": "1747:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1770:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1762:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:17:5"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1800:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1809:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:18:5"
									},
									"scope": 613,
									"src": "1738:203:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "2076:136:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 562,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2102:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 563,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2114:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2118:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2114:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 561,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2094:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2094:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e732063616e2075706461746520746f6b656e41646472657373",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2127:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905",
																"typeString": "literal_string \"Only admins can update tokenAddress\""
															},
															"value": "Only admins can update tokenAddress"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b69f07c652d0a337c752c002793bf497aa7a91395f5e4355ddf8ab54eaf3905",
																"typeString": "literal_string \"Only admins can update tokenAddress\""
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2086:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:79:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "2086:79:5"
											},
											{
												"expression": {
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 569,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2175:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 570,
														"name": "newTokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "2190:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2175:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "2175:30:5"
											}
										]
									},
									"functionSelector": "26a4e8d2",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenAddress",
									"nameLocation": "2028:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "newTokenAddress",
												"nameLocation": "2052:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2044:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2043:25:5"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:5"
									},
									"scope": 613,
									"src": "2019:193:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "2360:156:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 581,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2386:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 582,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2398:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2402:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2398:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 580,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2378:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2378:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e732063616e2075706461746520696e697469616c207374616b6520616d6f756e74",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2411:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72",
																"typeString": "literal_string \"Only admins can update initial stake amount\""
															},
															"value": "Only admins can update initial stake amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fea50bd579763a1a293314d1e3d34d983ab0d0434b8567ac2e7391c9fbc90e72",
																"typeString": "literal_string \"Only admins can update initial stake amount\""
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2370:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "2370:87:5"
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 588,
														"name": "initialStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "2467:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "newInitialStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2488:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2467:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "2467:42:5"
											}
										]
									},
									"functionSelector": "10bc2d44",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setInitialStake",
									"nameLocation": "2306:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "newInitialStakeAmount",
												"nameLocation": "2330:21:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2322:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:31:5"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:5"
									},
									"scope": 613,
									"src": "2297:219:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "2645:131:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 600,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2671:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 601,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2683:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2687:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2683:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 599,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "2663:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2663:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e732063616e207570646174652044414f2061646472657373",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2696:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4",
																"typeString": "literal_string \"Only admins can update DAO address\""
															},
															"value": "Only admins can update DAO address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3520eb78e93c49f3efc7fa6307e8840b9a702d2caa6afc586067d9099551f2c4",
																"typeString": "literal_string \"Only admins can update DAO address\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2655:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "2655:78:5"
											},
											{
												"expression": {
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 607,
														"name": "daoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2743:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 608,
														"name": "newDaoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "2756:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2743:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "2743:26:5"
											}
										]
									},
									"functionSelector": "9a3cac6a",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setDaoAddress",
									"nameLocation": "2601:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "newDaoAddress",
												"nameLocation": "2623:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2615:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:23:5"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2645:0:5"
									},
									"scope": 613,
									"src": "2592:184:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 614,
							"src": "117:2661:5",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "32:2747:5"
				},
				"id": 5
			}
		}
	}
}